{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkrcj\\\\OneDrive\\\\\\uBB38\\uC11C\\\\Skyplanner\\\\SP_frontend\\\\src\\\\components\\\\common\\\\Students\\\\StList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { host } from \"src/LinkHost\";\nimport { Horizontal, HorizontalContainer } from \"src/components/common/MyTime/styled\";\nimport * as S from \"./styled\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const StList = () => {\n  _s();\n\n  //mouseEvent State\n  const [isHovering, setIsHovering] = useState(0); //\n\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [teaState, setTeaState] = useState({\n    t_job: \"\",\n    status: false\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/\");\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\n    } else {\n      axios.get(`http://${host}:8080/auth/sts`, {\n        //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        setListOfUsers(response.data.listOfUsers);\n      });\n      axios.get(`http://${host}:8080/auth/auth`, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          setTeaState({ ...teaState,\n            status: false\n          });\n        } else {\n          setTeaState({\n            t_job: response.data.t_job,\n            status: true\n          });\n        }\n      });\n    }\n  }, []);\n  return ___EmotionJSX(S.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, teaState.status ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(S.SearchContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(S.Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(S.SearchInput, {\n    type: \"text\",\n    placeholder: \"학생 검색\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }))), ___EmotionJSX(HorizontalContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Horizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), ___EmotionJSX(S.ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, listOfUsers.filter(value => {\n    if (searchTerm === \"\") {\n      return value.user_name;\n    } else if (value.user_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return value;\n    }\n  }).map((value, key) => {\n    return ___EmotionJSX(S.List, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(S.StName, {\n      onMouseOver: () => setIsHovering(1),\n      onMouseOut: () => setIsHovering(0),\n      to: `/myinfo/myplan/${value.user_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, ___EmotionJSX(S.StText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, value.user_name)));\n  }), isHovering === 1 ? ___EmotionJSX(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"\\uC2DC\\uAC04 | \\uD504\\uB85C\\uD544\") : ___EmotionJSX(React.Fragment, null))) : ___EmotionJSX(S.Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"*\\uD559\\uC0DD\\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\\uB418\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4.*\"));\n};\n\n_s(StList, \"CLNnGSeph2Q9of62VzXFh98dv3Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = StList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StList\");","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","host","Horizontal","HorizontalContainer","S","StList","isHovering","setIsHovering","listOfUsers","setListOfUsers","searchTerm","setSearchTerm","teaState","setTeaState","t_job","status","navigate","localStorage","getItem","alert","get","headers","accessToken","then","response","data","error","event","target","value","filter","user_name","toLowerCase","includes","map","key","user_id"],"sources":["C:/Users/qkrcj/OneDrive/문서/Skyplanner/SP_frontend/src/components/common/Students/StList/index.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { host } from \"src/LinkHost\";\r\nimport {\r\n  Horizontal,\r\n  HorizontalContainer,\r\n} from \"src/components/common/MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const StList = () => {\r\n  //mouseEvent State\r\n  const [isHovering, setIsHovering] = useState(0);\r\n  //\r\n  const [listOfUsers, setListOfUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\r\n    } else {\r\n      axios\r\n        .get(`http://${host}:8080/auth/sts`, {\r\n          //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          setListOfUsers(response.data.listOfUsers);\r\n        });\r\n\r\n      axios\r\n        .get(`http://${host}:8080/auth/auth`, {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.error) {\r\n            setTeaState({ ...teaState, status: false });\r\n          } else {\r\n            setTeaState({\r\n              t_job: response.data.t_job,\r\n              status: true,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n  return (\r\n    <S.Container>\r\n      {teaState.status ? (\r\n        <>\r\n          <S.SearchContainer>\r\n            <S.Search>\r\n              <S.SearchInput\r\n                type={\"text\"}\r\n                placeholder={\"학생 검색\"}\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n              />\r\n            </S.Search>\r\n          </S.SearchContainer>\r\n          <HorizontalContainer>\r\n            <Horizontal />\r\n          </HorizontalContainer>\r\n          <S.ListContainer>\r\n            {listOfUsers\r\n              .filter((value) => {\r\n                if (searchTerm === \"\") {\r\n                  return value.user_name;\r\n                } else if (\r\n                  value.user_name\r\n                    .toLowerCase()\r\n                    .includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return value;\r\n                }\r\n              })\r\n              .map((value, key) => {\r\n                return (\r\n                  <S.List key={key}>\r\n                    <S.StName\r\n                      onMouseOver={() => setIsHovering(1)}\r\n                      onMouseOut={() => setIsHovering(0)}\r\n                      to={`/myinfo/myplan/${value.user_id}`}\r\n                    >\r\n                      <S.StText>{value.user_name}</S.StText>\r\n                    </S.StName>\r\n                  </S.List>\r\n                );\r\n              })}\r\n            {isHovering === 1 ? <div>시간 | 프로필</div> : <></>}\r\n          </S.ListContainer>\r\n        </>\r\n      ) : (\r\n        <S.Alert>*학생계정으로 로그인되어있습니다.*</S.Alert>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}