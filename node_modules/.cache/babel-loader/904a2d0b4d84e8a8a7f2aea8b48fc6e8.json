{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkrcj\\\\OneDrive\\\\\\uBB38\\uC11C\\\\Skyplanner\\\\SP_frontend\\\\src\\\\components\\\\common\\\\Students\\\\StList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Horizontal, HorizontalContainer } from \"src/components/common/MyTime/styled\";\nimport * as S from \"./styled\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const StList = () => {\n  _s();\n\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [teaState, setTeaState] = useState({\n    t_job: \"\",\n    status: false\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      navigate(\"/auth/login\");\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\n    } else {\n      axios.get(\"http://localhost:8080/auth\", {\n        //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        setListOfUsers(response.data.listOfUsers);\n      });\n      axios.get(\"http://localhost:8080/auth/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          setTeaState({ ...teaState,\n            status: false\n          });\n        } else {\n          setTeaState({\n            t_job: response.data.t_job,\n            status: true\n          });\n        }\n      });\n    }\n  }, []);\n  console.log(listOfUsers.user_name);\n  return ___EmotionJSX(S.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, teaState.t_job === \"teacher\" ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(S.SearchContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(S.Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(S.SearchInput, {\n    type: \"text\",\n    placeholder: \"\\uD559\\uC0DD \\uAC80\\uC0C9\",\n    onChange: event => {\n      setSearchTerm(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }))), ___EmotionJSX(HorizontalContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Horizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), ___EmotionJSX(S.ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, listOfUsers.filter(value => {\n    if (searchTerm === \"\") {\n      return value;\n    } else if (value.user_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return value;\n    }\n  }).map((value, key) => {\n    return ___EmotionJSX(S.List, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(S.StName, {\n      to: `/profile/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, ___EmotionJSX(S.StText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, value.user_name)));\n  }))) : ___EmotionJSX(S.Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"*\\uD559\\uC0DD\\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\\uB418\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4.*\"));\n};\n\n_s(StList, \"m/tZyHs7OmWTQb+Df9J604zCAfs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = StList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StList\");","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","Horizontal","HorizontalContainer","S","StList","listOfUsers","setListOfUsers","searchTerm","setSearchTerm","teaState","setTeaState","t_job","status","navigate","localStorage","getItem","alert","get","headers","accessToken","then","response","data","error","console","log","user_name","event","target","value","filter","toLowerCase","includes","map","key","id"],"sources":["C:/Users/qkrcj/OneDrive/문서/Skyplanner/SP_frontend/src/components/common/Students/StList/index.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Horizontal,\r\n  HorizontalContainer,\r\n} from \"src/components/common/MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const StList = () => {\r\n  const [listOfUsers, setListOfUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/auth/login\");\r\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\r\n    } else {\r\n      axios\r\n        .get(\"http://localhost:8080/auth\", {\r\n          //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          setListOfUsers(response.data.listOfUsers);\r\n        });\r\n      axios\r\n        .get(\"http://localhost:8080/auth/auth\", {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.error) {\r\n            setTeaState({ ...teaState, status: false });\r\n          } else {\r\n            setTeaState({\r\n              t_job: response.data.t_job,\r\n              status: true,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n  console.log(listOfUsers.user_name);\r\n  return (\r\n    <S.Container>\r\n      {teaState.t_job === \"teacher\" ? (\r\n        <>\r\n          <S.SearchContainer>\r\n            <S.Search>\r\n              <S.SearchInput\r\n                type=\"text\"\r\n                placeholder=\"학생 검색\"\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n              />\r\n            </S.Search>\r\n          </S.SearchContainer>\r\n          <HorizontalContainer>\r\n            <Horizontal />\r\n          </HorizontalContainer>\r\n          <S.ListContainer>\r\n            {listOfUsers\r\n              .filter((value) => {\r\n                if (searchTerm === \"\") {\r\n                  return value;\r\n                } else if (\r\n                  value.user_name\r\n                    .toLowerCase()\r\n                    .includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return value;\r\n                }\r\n              })\r\n              .map((value, key) => {\r\n                return (\r\n                  <S.List key={key}>\r\n                    <S.StName to={`/profile/${value.id}`}>\r\n                      <S.StText>{value.user_name}</S.StText>\r\n                    </S.StName>\r\n                  </S.List>\r\n                );\r\n              })}\r\n          </S.ListContainer>\r\n        </>\r\n      ) : (\r\n        <S.Alert>*학생계정으로 로그인되어있습니다.*</S.Alert>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}