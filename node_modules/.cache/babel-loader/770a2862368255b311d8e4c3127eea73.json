{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect, useCallback } from \"react\";\nexport const useScrollFadeIn = function (end) {\n  _s();\n\n  let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3000;\n  const dom = useRef();\n  const stepTime = Math.abs(Math.floor(duration / (end - start))); // 1\n\n  const handleScroll = useCallback(_ref => {\n    let [entry] = _ref;\n    const {\n      current\n    } = dom;\n\n    if (entry.isIntersecting) {\n      let currentNumber = start;\n      const counter = setInterval(() => {\n        currentNumber += 1;\n\n        if (currentNumber === end) {\n          clearInterval(counter);\n        }\n      }, stepTime);\n    }\n  }, []);\n  useEffect(() => {\n    let observer;\n    const {\n      current\n    } = dom;\n\n    if (current) {\n      observer = new IntersectionObserver(handleScroll, {\n        threshold: 0.7\n      });\n      observer.observe(current);\n      return () => observer && observer.disconnect();\n    }\n  }, [handleScroll]);\n  return {\n    ref: dom\n  };\n};\n\n_s(useScrollFadeIn, \"n7jokSJEQ/F7j7MC1AK9uCOvYGs=\");","map":{"version":3,"names":["useRef","useEffect","useCallback","useScrollFadeIn","end","start","duration","dom","stepTime","Math","abs","floor","handleScroll","entry","current","isIntersecting","currentNumber","counter","setInterval","clearInterval","observer","IntersectionObserver","threshold","observe","disconnect","ref"],"sources":["C:/Users/qkrcj/OneDrive/바탕 화면/ad/SkyPlanner/client/src/hooks/useScrollFadeIn.js"],"sourcesContent":["import { useRef, useEffect, useCallback } from \"react\";\r\n\r\nexport const useScrollFadeIn = (end, start = 0, duration = 3000) => {\r\n  const dom = useRef();\r\n  const stepTime = Math.abs(Math.floor(duration / (end - start))); // 1\r\n\r\n  const handleScroll = useCallback(([entry]) => {\r\n    const { current } = dom;\r\n\r\n    if (entry.isIntersecting) {\r\n      let currentNumber = start;\r\n      const counter = setInterval(() => {\r\n        currentNumber += 1;\r\n\r\n        if (currentNumber === end) {\r\n          clearInterval(counter);\r\n        }\r\n      }, stepTime);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let observer;\r\n    const { current } = dom;\r\n\r\n    if (current) {\r\n      observer = new IntersectionObserver(handleScroll, { threshold: 0.7 });\r\n      observer.observe(current);\r\n\r\n      return () => observer && observer.disconnect();\r\n    }\r\n  }, [handleScroll]);\r\n\r\n  return {\r\n    ref: dom,\r\n  };\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,eAAe,GAAG,UAACC,GAAD,EAAqC;EAAA;;EAAA,IAA/BC,KAA+B,uEAAvB,CAAuB;EAAA,IAApBC,QAAoB,uEAAT,IAAS;EAClE,MAAMC,GAAG,GAAGP,MAAM,EAAlB;EACA,MAAMQ,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWL,QAAQ,IAAIF,GAAG,GAAGC,KAAV,CAAnB,CAAT,CAAjB,CAFkE,CAED;;EAEjE,MAAMO,YAAY,GAAGV,WAAW,CAAC,QAAa;IAAA,IAAZ,CAACW,KAAD,CAAY;IAC5C,MAAM;MAAEC;IAAF,IAAcP,GAApB;;IAEA,IAAIM,KAAK,CAACE,cAAV,EAA0B;MACxB,IAAIC,aAAa,GAAGX,KAApB;MACA,MAAMY,OAAO,GAAGC,WAAW,CAAC,MAAM;QAChCF,aAAa,IAAI,CAAjB;;QAEA,IAAIA,aAAa,KAAKZ,GAAtB,EAA2B;UACzBe,aAAa,CAACF,OAAD,CAAb;QACD;MACF,CAN0B,EAMxBT,QANwB,CAA3B;IAOD;EACF,CAb+B,EAa7B,EAb6B,CAAhC;EAeAP,SAAS,CAAC,MAAM;IACd,IAAImB,QAAJ;IACA,MAAM;MAAEN;IAAF,IAAcP,GAApB;;IAEA,IAAIO,OAAJ,EAAa;MACXM,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBT,YAAzB,EAAuC;QAAEU,SAAS,EAAE;MAAb,CAAvC,CAAX;MACAF,QAAQ,CAACG,OAAT,CAAiBT,OAAjB;MAEA,OAAO,MAAMM,QAAQ,IAAIA,QAAQ,CAACI,UAAT,EAAzB;IACD;EACF,CAVQ,EAUN,CAACZ,YAAD,CAVM,CAAT;EAYA,OAAO;IACLa,GAAG,EAAElB;EADA,CAAP;AAGD,CAlCM;;GAAMJ,e"},"metadata":{},"sourceType":"module"}