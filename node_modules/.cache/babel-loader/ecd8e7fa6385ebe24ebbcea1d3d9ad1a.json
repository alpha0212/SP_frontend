{"ast":null,"code":"import _objectSpread from\"C:/Users/qkrcj/OneDrive/\\uBB38\\uC11C/Skyplanner/SP_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/qkrcj/OneDrive/\\uBB38\\uC11C/Skyplanner/SP_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{host}from\"src/LinkHost\";import{Horizontal,HorizontalContainer}from\"src/components/common/MyTime/styled\";import*as S from\"./styled\";import{jsx as ___EmotionJSX}from\"@emotion/react\";export var StList=function StList(){//mouseEvent -> onMouse~\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),listOfUsers=_useState2[0],setListOfUsers=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];var _useState5=useState({t_job:\"\",status:false}),_useState6=_slicedToArray(_useState5,2),teaState=_useState6[0],setTeaState=_useState6[1];var navigate=useNavigate();useEffect(function(){if(!localStorage.getItem(\"accessToken\")){navigate(\"/\");alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");}else{axios.get(\"http://\".concat(host,\":8080/auth/sts\"),{//일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\nheaders:{accessToken:localStorage.getItem(\"accessToken\")}}).then(function(response){setListOfUsers(response.data.listOfUsers);});axios.get(\"http://\".concat(host,\":8080/auth/auth\"),{headers:{accessToken:localStorage.getItem(\"accessToken\")}}).then(function(response){if(response.data.error){setTeaState(_objectSpread(_objectSpread({},teaState),{},{status:false}));}else{setTeaState({t_job:response.data.t_job,status:true});}});}},[]);return ___EmotionJSX(S.Container,null,teaState.status?___EmotionJSX(React.Fragment,null,___EmotionJSX(S.SearchContainer,null,___EmotionJSX(S.Search,null,___EmotionJSX(S.SearchInput,{type:\"text\",placeholder:\"학생 검색\",onChange:function onChange(event){setSearchTerm(event.target.value);}}))),___EmotionJSX(HorizontalContainer,null,___EmotionJSX(Horizontal,null)),___EmotionJSX(S.ListContainer,null,listOfUsers.filter(function(value){if(searchTerm===\"\"){return value.user_name;}else if(value.user_name.toLowerCase().includes(searchTerm.toLowerCase())){return value;}}).map(function(value,key){return ___EmotionJSX(S.List,{key:key},___EmotionJSX(S.StName,{to:\"/myinfo/myplan/\".concat(value.user_id)},___EmotionJSX(S.StText,null,value.user_name)));}))):___EmotionJSX(S.Alert,null,\"*\\uD559\\uC0DD\\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\\uB418\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4.*\"));};","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","host","Horizontal","HorizontalContainer","S","StList","listOfUsers","setListOfUsers","searchTerm","setSearchTerm","t_job","status","teaState","setTeaState","navigate","localStorage","getItem","alert","get","headers","accessToken","then","response","data","error","event","target","value","filter","user_name","toLowerCase","includes","map","key","user_id"],"sources":["C:/Users/qkrcj/OneDrive/문서/Skyplanner/SP_frontend/src/components/common/Students/StList/index.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { host } from \"src/LinkHost\";\r\nimport {\r\n  Horizontal,\r\n  HorizontalContainer,\r\n} from \"src/components/common/MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const StList = () => {\r\n  //mouseEvent -> onMouse~\r\n  const [listOfUsers, setListOfUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\r\n    } else {\r\n      axios\r\n        .get(`http://${host}:8080/auth/sts`, {\r\n          //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          setListOfUsers(response.data.listOfUsers);\r\n        });\r\n\r\n      axios\r\n        .get(`http://${host}:8080/auth/auth`, {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.error) {\r\n            setTeaState({ ...teaState, status: false });\r\n          } else {\r\n            setTeaState({\r\n              t_job: response.data.t_job,\r\n              status: true,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n  return (\r\n    <S.Container>\r\n      {teaState.status ? (\r\n        <>\r\n          <S.SearchContainer>\r\n            <S.Search>\r\n              <S.SearchInput\r\n                type={\"text\"}\r\n                placeholder={\"학생 검색\"}\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n              />\r\n            </S.Search>\r\n          </S.SearchContainer>\r\n          <HorizontalContainer>\r\n            <Horizontal />\r\n          </HorizontalContainer>\r\n          <S.ListContainer>\r\n            {listOfUsers\r\n              .filter((value) => {\r\n                if (searchTerm === \"\") {\r\n                  return value.user_name;\r\n                } else if (\r\n                  value.user_name\r\n                    .toLowerCase()\r\n                    .includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return value;\r\n                }\r\n              })\r\n              .map((value, key) => {\r\n                return (\r\n                  <S.List key={key}>\r\n                    <S.StName to={`/myinfo/myplan/${value.user_id}`}>\r\n                      <S.StText>{value.user_name}</S.StText>\r\n                    </S.StName>\r\n                  </S.List>\r\n                );\r\n              })}\r\n          </S.ListContainer>\r\n        </>\r\n      ) : (\r\n        <S.Alert>*학생계정으로 로그인되어있습니다.*</S.Alert>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}