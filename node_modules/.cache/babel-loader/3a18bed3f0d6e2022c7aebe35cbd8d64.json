{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkrcj\\\\OneDrive\\\\\\uBB38\\uC11C\\\\Skyplanner\\\\SP_frontend\\\\src\\\\components\\\\common\\\\TimeData\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext, useMemo } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Horizontal, HorizontalContainer } from \"../MyTime/styled\";\nimport * as S from \"./styled\";\nimport { BarGraph } from \"../GraphList\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const TimeData = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [timeData, setTimeData] = useState({});\n  const subData = useMemo(() => [{\n    id: 1,\n    sub: \"국어\",\n    time: timeData.kor\n  }, {\n    id: 2,\n    sub: \"영어\",\n    time: timeData.eng\n  }, {\n    id: 3,\n    sub: \"수학\",\n    time: timeData.math\n  }, {\n    id: 4,\n    sub: \"과학\",\n    time: timeData.sci\n  }, {\n    id: 5,\n    sub: \"사회\",\n    time: timeData.com\n  }, {\n    id: 6,\n    sub: \"한국사\",\n    time: timeData.kh\n  }, {\n    id: 7,\n    sub: \"공부\",\n    time: timeData.study\n  }], [timeData]);\n  const time = useMemo(() => ({\n    labels: subData.map(val => val.sub),\n    datasets: [{\n      label: \"시간데이터\",\n      data: subData.map(val => val.time),\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(255, 159, 64, 0.2)\", \"rgba(255, 205, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(84, 221, 154, 0.2)\"],\n      borderColor: [\"rgb(255, 99, 132)\", \"rgb(255, 159, 64)\", \"rgb(255, 205, 86)\", \"rgb(75, 192, 192)\", \"rgb(54, 162, 235)\", \"rgb(153, 102, 255)\", \"rgb(84, 221, 154)\"],\n      borderWidth: 1\n    }]\n  }), [subData]);\n  useEffect(() => {\n    axios.get(`http://localhost:8080/todaytimes/byId/${id}`).then(res => setTimeData(res.data));\n  }, []);\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(S.TimeDataContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(S.TimeTextContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(S.TimeText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDDD3 \", timeData.createdAt)), ___EmotionJSX(HorizontalContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Horizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), ___EmotionJSX(S.TimeDataBoxContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(BarGraph, {\n    chartData: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(TimeData, \"Bn7E9FYJDr6hgezcUqop0yQ0MWg=\", false, function () {\n  return [useParams];\n});\n\n_c = TimeData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeData\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useMemo","useParams","useNavigate","axios","Bar","Horizontal","HorizontalContainer","S","BarGraph","TimeData","id","timeData","setTimeData","subData","sub","time","kor","eng","math","sci","com","kh","study","labels","map","val","datasets","label","data","backgroundColor","borderColor","borderWidth","get","then","res","createdAt"],"sources":["C:/Users/qkrcj/OneDrive/문서/Skyplanner/SP_frontend/src/components/common/TimeData/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useMemo } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport { Horizontal, HorizontalContainer } from \"../MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\nimport { BarGraph } from \"../GraphList\";\r\n\r\nexport const TimeData = () => {\r\n  let { id } = useParams();\r\n  const [timeData, setTimeData] = useState({});\r\n\r\n  const subData = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        sub: \"국어\",\r\n        time: timeData.kor,\r\n      },\r\n      {\r\n        id: 2,\r\n        sub: \"영어\",\r\n        time: timeData.eng,\r\n      },\r\n      {\r\n        id: 3,\r\n        sub: \"수학\",\r\n        time: timeData.math,\r\n      },\r\n      {\r\n        id: 4,\r\n        sub: \"과학\",\r\n        time: timeData.sci,\r\n      },\r\n      {\r\n        id: 5,\r\n        sub: \"사회\",\r\n        time: timeData.com,\r\n      },\r\n      {\r\n        id: 6,\r\n        sub: \"한국사\",\r\n        time: timeData.kh,\r\n      },\r\n      {\r\n        id: 7,\r\n        sub: \"공부\",\r\n        time: timeData.study,\r\n      },\r\n    ],\r\n    [timeData]\r\n  );\r\n\r\n  const time = useMemo(\r\n    () => ({\r\n      labels: subData.map((val) => val.sub),\r\n      datasets: [\r\n        {\r\n          label: \"시간데이터\",\r\n          data: subData.map((val) => val.time),\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n            \"rgba(255, 205, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(84, 221, 154, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgb(255, 99, 132)\",\r\n            \"rgb(255, 159, 64)\",\r\n            \"rgb(255, 205, 86)\",\r\n            \"rgb(75, 192, 192)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(153, 102, 255)\",\r\n            \"rgb(84, 221, 154)\",\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    }),\r\n    [subData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/todaytimes/byId/${id}`)\r\n      .then((res) => setTimeData(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <S.TimeDataContainer>\r\n        <S.TimeTextContainer>\r\n          <S.TimeText>🗓 {timeData.createdAt}</S.TimeText>\r\n        </S.TimeTextContainer>\r\n        <HorizontalContainer>\r\n          <Horizontal />\r\n        </HorizontalContainer>\r\n        <S.TimeDataBoxContainer>\r\n          <BarGraph chartData={time} />\r\n        </S.TimeDataBoxContainer>\r\n      </S.TimeDataContainer>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}