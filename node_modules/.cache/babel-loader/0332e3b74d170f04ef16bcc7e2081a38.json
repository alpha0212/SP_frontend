{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkrcj\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\SkyPlanner\\\\client\\\\src\\\\components\\\\common\\\\FormInput\\\\index.tsx\";\nimport React from \"react\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as S from \"./styled\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FormInput = /*#__PURE__*/React.forwardRef(_c = (_ref, ref) => {\n  let {\n    placeholder,\n    type,\n    name\n  } = _ref;\n  const initialValues = {\n    user_name: \"\",\n    user_email: \"\",\n    user_id: \"\",\n    user_pw: \"\",\n    user_ch_pw: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    user_name: Yup.string().min(3).max(15).required(),\n    user_email: Yup.string().min(3).max(50).required(),\n    user_id: Yup.string().min(3).max(20).required(),\n    user_pw: Yup.string().min(3).max(15).required(),\n    user_ch_pw: Yup.string().min(3).max(15).required()\n  });\n  return ___EmotionJSX(S.FormInputContainer, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(S.InputElementContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(S.InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Formik, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Field, {\n    placeholder: placeholder,\n    type: type,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  })))));\n});\n_c2 = FormInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormInput$React.forwardRef\");\n$RefreshReg$(_c2, \"FormInput\");","map":{"version":3,"names":["React","Formik","Field","Yup","S","FormInput","forwardRef","ref","placeholder","type","name","initialValues","user_name","user_email","user_id","user_pw","user_ch_pw","validationSchema","object","shape","string","min","max","required"],"sources":["C:/Users/qkrcj/OneDrive/바탕 화면/SkyPlanner/client/src/components/common/FormInput/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport interface FormInputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n}\r\nexport const FormInput = React.forwardRef<HTMLInputElement, FormInputProps>(\r\n  ({ placeholder, type, name }, ref) => {\r\n    const initialValues = {\r\n      user_name: \"\",\r\n      user_email: \"\",\r\n      user_id: \"\",\r\n      user_pw: \"\",\r\n      user_ch_pw: \"\",\r\n    };\r\n    const validationSchema = Yup.object().shape({\r\n      user_name: Yup.string().min(3).max(15).required(),\r\n      user_email: Yup.string().min(3).max(50).required(),\r\n      user_id: Yup.string().min(3).max(20).required(),\r\n      user_pw: Yup.string().min(3).max(15).required(),\r\n      user_ch_pw: Yup.string().min(3).max(15).required(),\r\n    });\r\n    return (\r\n      <S.FormInputContainer ref={ref}>\r\n        <S.InputElementContainer>\r\n          <S.InputContainer>\r\n            <Formik>\r\n              <Field placeholder={placeholder} type={type} name={name} />\r\n            </Formik>\r\n          </S.InputContainer>\r\n        </S.InputElementContainer>\r\n      </S.FormInputContainer>\r\n    );\r\n  }\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAuBC,KAAvB,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;AAMA,OAAO,MAAMC,SAAS,gBAAGL,KAAK,CAACM,UAAN,MACvB,OAA8BC,GAA9B,KAAsC;EAAA,IAArC;IAAEC,WAAF;IAAeC,IAAf;IAAqBC;EAArB,CAAqC;EACpC,MAAMC,aAAa,GAAG;IACpBC,SAAS,EAAE,EADS;IAEpBC,UAAU,EAAE,EAFQ;IAGpBC,OAAO,EAAE,EAHW;IAIpBC,OAAO,EAAE,EAJW;IAKpBC,UAAU,EAAE;EALQ,CAAtB;EAOA,MAAMC,gBAAgB,GAAGd,GAAG,CAACe,MAAJ,GAAaC,KAAb,CAAmB;IAC1CP,SAAS,EAAET,GAAG,CAACiB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAD+B;IAE1CV,UAAU,EAAEV,GAAG,CAACiB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAF8B;IAG1CT,OAAO,EAAEX,GAAG,CAACiB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAHiC;IAI1CR,OAAO,EAAEZ,GAAG,CAACiB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAJiC;IAK1CP,UAAU,EAAEb,GAAG,CAACiB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B;EAL8B,CAAnB,CAAzB;EAOA,OACE,cAAC,CAAD,CAAG,kBAAH;IAAsB,GAAG,EAAEhB,GAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,CAAD,CAAG,qBAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,CAAD,CAAG,cAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,KAAD;IAAO,WAAW,EAAEC,WAApB;IAAiC,IAAI,EAAEC,IAAvC;IAA6C,IAAI,EAAEC,IAAnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CADF,CADF,CADF;AAWD,CA3BsB,CAAlB;MAAML,S"},"metadata":{},"sourceType":"module"}