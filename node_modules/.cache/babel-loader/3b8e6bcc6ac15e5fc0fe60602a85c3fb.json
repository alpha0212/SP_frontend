{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkrcj\\\\OneDrive\\\\\\uBB38\\uC11C\\\\Skyplanner\\\\SP_frontend\\\\src\\\\components\\\\common\\\\Managements\\\\ManagementTemplate\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as S from \"./styled\";\nimport { SideContainer } from \"./styled\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const ManagementTemplate = _ref => {\n  _s();\n\n  let {\n    managementType,\n    search,\n    goal\n  } = _ref;\n  const [bool, setBool] = useState(false);\n\n  const isOpen = () => {\n    setBool(!bool);\n  };\n\n  const [clicked, setClicked] = useState(false);\n\n  const isClicked = () => {\n    setClicked(!clicked);\n    setClicked2(false);\n  };\n\n  return ___EmotionJSX(S.Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(SideContainer, {\n    testProps: bool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(S.HamburgerContainer, {\n    testProps: bool,\n    onClick: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(S.HamburgerOne, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(S.HamburgerTwo, {\n    testProps: bool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(S.HamburgerThree, {\n    testProps: bool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), bool ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(S.Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Management\"), ___EmotionJSX(S.MenuList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(S.Menus, {\n    backgroundProps: clicked,\n    onClick: isClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(S.MenuText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uD559\\uC0DD\\uAC80\\uC0C9\")))) : ___EmotionJSX(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), clicked ? search : ___EmotionJSX(React.Fragment, null));\n};\n\n_s(ManagementTemplate, \"7PqaE+no8nyACb0FnjXF/Ep9ttA=\");\n\n_c = ManagementTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagementTemplate\");","map":{"version":3,"names":["React","useState","S","SideContainer","ManagementTemplate","managementType","search","goal","bool","setBool","isOpen","clicked","setClicked","isClicked","setClicked2"],"sources":["C:/Users/qkrcj/OneDrive/문서/Skyplanner/SP_frontend/src/components/common/Managements/ManagementTemplate/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as S from \"./styled\";\r\nimport { SideContainer } from \"./styled\";\r\n\r\nexport interface ManagementTemplateProps {\r\n  managementType: \"search\" | \"goal\";\r\n  search: React.ReactNode;\r\n  goal: React.ReactNode;\r\n}\r\n\r\nexport const ManagementTemplate: React.FC<ManagementTemplateProps> = ({\r\n  managementType,\r\n  search,\r\n  goal,\r\n}) => {\r\n  const [bool, setBool] = useState(false);\r\n  const isOpen = () => {\r\n    setBool(!bool);\r\n  };\r\n  const [clicked, setClicked] = useState(false);\r\n  const isClicked = () => {\r\n    setClicked(!clicked);\r\n    setClicked2(false);\r\n  };\r\n\r\n  return (\r\n    <S.Flex>\r\n      <SideContainer testProps={bool}>\r\n        <S.HamburgerContainer testProps={bool} onClick={isOpen}>\r\n          <S.HamburgerOne />\r\n          <S.HamburgerTwo testProps={bool} />\r\n          <S.HamburgerThree testProps={bool} />\r\n        </S.HamburgerContainer>\r\n        {bool ? (\r\n          <>\r\n            <S.Logo>Management</S.Logo>\r\n            <S.MenuList>\r\n              <S.Menus backgroundProps={clicked} onClick={isClicked}>\r\n                <S.MenuText>학생검색</S.MenuText>\r\n              </S.Menus>\r\n            </S.MenuList>\r\n          </>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </SideContainer>\r\n      {clicked ? search : <></>}\r\n    </S.Flex>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAQA,OAAO,MAAMC,kBAAqD,GAAG,QAI/D;EAAA;;EAAA,IAJgE;IACpEC,cADoE;IAEpEC,MAFoE;IAGpEC;EAHoE,CAIhE;EACJ,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;;EACA,MAAMS,MAAM,GAAG,MAAM;IACnBD,OAAO,CAAC,CAACD,IAAF,CAAP;EACD,CAFD;;EAGA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;;EACA,MAAMY,SAAS,GAAG,MAAM;IACtBD,UAAU,CAAC,CAACD,OAAF,CAAV;IACAG,WAAW,CAAC,KAAD,CAAX;EACD,CAHD;;EAKA,OACE,cAAC,CAAD,CAAG,IAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,aAAD;IAAe,SAAS,EAAEN,IAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,CAAD,CAAG,kBAAH;IAAsB,SAAS,EAAEA,IAAjC;IAAuC,OAAO,EAAEE,MAAhD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,CAAD,CAAG,YAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEE,cAAC,CAAD,CAAG,YAAH;IAAgB,SAAS,EAAEF,IAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,EAGE,cAAC,CAAD,CAAG,cAAH;IAAkB,SAAS,EAAEA,IAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,CADF,EAMGA,IAAI,GACH,oCACE,cAAC,CAAD,CAAG,IAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBADF,EAEE,cAAC,CAAD,CAAG,QAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,CAAD,CAAG,KAAH;IAAS,eAAe,EAAEG,OAA1B;IAAmC,OAAO,EAAEE,SAA5C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,cAAC,CAAD,CAAG,QAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BADF,CADF,CAFF,CADG,GAUH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAhBJ,CADF,EAoBGF,OAAO,GAAGL,MAAH,GAAY,mCApBtB,CADF;AAwBD,CAvCM;;GAAMF,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}