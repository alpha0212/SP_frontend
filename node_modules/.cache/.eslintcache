[{"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\index.tsx":"1","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\App.tsx":"3","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\styles\\index.ts":"4","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\styles\\globalStyle.ts":"5","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\index.ts":"6","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\index.ts":"7","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\auth\\index.jsx":"8","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\styles\\reset.ts":"9","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\auth\\styled.ts":"10","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\main\\index.tsx":"11","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\index.ts":"12","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\main\\styled.ts":"13","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\todays\\styled.ts":"14","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\index.ts":"15","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Button\\index.ts":"16","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\index.ts":"17","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimeInputButton\\index.ts":"18","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\index.ts":"19","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\index.ts":"20","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyTime\\index.tsx":"21","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TitleText\\index.tsx":"22","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Footer\\index.tsx":"23","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Habit\\index.tsx":"24","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Header\\index.tsx":"25","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\List\\index.tsx":"26","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimesFormTemplate\\index.tsx":"27","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Navbar\\index.jsx":"28","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Intro\\index.jsx":"29","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimeData\\index.jsx":"30","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyTime\\styled.ts":"31","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TitleText\\styled.ts":"32","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ReviewSlide\\styled.ts":"33","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Footer\\styled.ts":"34","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Habit\\styled.ts":"35","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\List\\styled.ts":"36","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Header\\styled.ts":"37","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\hooks\\useScrollFadeIn.js":"38","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimesFormTemplate\\styled.ts":"39","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Navbar\\styled.ts":"40","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Intro\\styled.ts":"41","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimeData\\styled.ts":"42","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Profile\\styled.ts":"43","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\index.tsx":"44","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\index.tsx":"45","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\GoalTime\\index.jsx":"46","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\TodayTime\\index.jsx":"47","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\HabitTime\\index.jsx":"48","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\styled.ts":"49","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\styled.ts":"50","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\GoalTime\\styled.ts":"51","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\styled.ts":"52","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\styled.ts":"53","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\TodayTime\\styled.ts":"54","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StList\\styled.ts":"55","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\HabitTime\\styled.ts":"56","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ReviewSlide\\index.tsx":"57","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyInfoTemplate\\index.tsx":"58","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyInfoTemplate\\styled.ts":"59","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\todays\\index.tsx":"60","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\info\\index.tsx":"61","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ShowMyPlan\\styled.ts":"62","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ProFile\\styled.ts":"63","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\index.jsx":"64","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ProFile\\index.tsx":"65","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StList\\index.jsx":"66","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Snackbar\\index.tsx":"67","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\index.jsx":"68","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\helper\\AuthContext.ts":"69","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\hooks\\useNetwork.js":"70","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ShowMyPlan\\index.tsx":"71","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\LinkHost.ts":"72","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\LineGraph\\index.jsx":"73","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\CircleGraph\\index.jsx":"74","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\BarGraph\\index.jsx":"75","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\404.tsx":"76","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TeacherMenu\\index.ts":"77","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TeacherMenu\\TeacherInput\\index.tsx":"78","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StMenu\\index.tsx":"79","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StMenu\\styled.ts":"80","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\management\\index.tsx":"81","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Sidebar\\index.tsx":"82","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Sidebar\\styled.ts":"83"},{"size":720,"mtime":1663801971767,"results":"84","hashOfConfig":"85"},{"size":440,"mtime":1663801971783,"results":"86","hashOfConfig":"85"},{"size":1529,"mtime":1667220070304,"results":"87","hashOfConfig":"85"},{"size":32,"mtime":1663801971783,"results":"88","hashOfConfig":"85"},{"size":1440,"mtime":1664291786413,"results":"89","hashOfConfig":"85"},{"size":133,"mtime":1667220047165,"results":"90","hashOfConfig":"85"},{"size":27,"mtime":1663801971767,"results":"91","hashOfConfig":"85"},{"size":691,"mtime":1666954035104,"results":"92","hashOfConfig":"85"},{"size":1547,"mtime":1663801971783,"results":"93","hashOfConfig":"85"},{"size":203,"mtime":1663801971775,"results":"94","hashOfConfig":"85"},{"size":226,"mtime":1664445578511,"results":"95","hashOfConfig":"85"},{"size":671,"mtime":1667220136932,"results":"96","hashOfConfig":"85"},{"size":605,"mtime":1663801971775,"results":"97","hashOfConfig":"85"},{"size":2160,"mtime":1663801971775,"results":"98","hashOfConfig":"85"},{"size":132,"mtime":1663801971711,"results":"99","hashOfConfig":"85"},{"size":357,"mtime":1663801971711,"results":"100","hashOfConfig":"85"},{"size":89,"mtime":1663801971743,"results":"101","hashOfConfig":"85"},{"size":242,"mtime":1663801971759,"results":"102","hashOfConfig":"85"},{"size":54,"mtime":1666423831220,"results":"103","hashOfConfig":"85"},{"size":91,"mtime":1664534798708,"results":"104","hashOfConfig":"85"},{"size":923,"mtime":1664445505488,"results":"105","hashOfConfig":"85"},{"size":530,"mtime":1663801971759,"results":"106","hashOfConfig":"85"},{"size":235,"mtime":1664602820617,"results":"107","hashOfConfig":"85"},{"size":2413,"mtime":1664349730431,"results":"108","hashOfConfig":"85"},{"size":376,"mtime":1666954006062,"results":"109","hashOfConfig":"85"},{"size":1597,"mtime":1663801971727,"results":"110","hashOfConfig":"85"},{"size":1295,"mtime":1663814245339,"results":"111","hashOfConfig":"85"},{"size":1060,"mtime":1666952661096,"results":"112","hashOfConfig":"85"},{"size":4916,"mtime":1664875205410,"results":"113","hashOfConfig":"85"},{"size":8944,"mtime":1666954016279,"results":"114","hashOfConfig":"85"},{"size":1843,"mtime":1664603041077,"results":"115","hashOfConfig":"85"},{"size":616,"mtime":1663801971767,"results":"116","hashOfConfig":"85"},{"size":785,"mtime":1664199740043,"results":"117","hashOfConfig":"85"},{"size":342,"mtime":1664766007035,"results":"118","hashOfConfig":"85"},{"size":2164,"mtime":1664446555452,"results":"119","hashOfConfig":"85"},{"size":916,"mtime":1663801971727,"results":"120","hashOfConfig":"85"},{"size":519,"mtime":1666954003881,"results":"121","hashOfConfig":"85"},{"size":1478,"mtime":1663801971767,"results":"122","hashOfConfig":"85"},{"size":2169,"mtime":1664602500278,"results":"123","hashOfConfig":"85"},{"size":1524,"mtime":1664448391802,"results":"124","hashOfConfig":"85"},{"size":3075,"mtime":1664765545187,"results":"125","hashOfConfig":"85"},{"size":1183,"mtime":1666954021960,"results":"126","hashOfConfig":"85"},{"size":312,"mtime":1663820895410,"results":"127","hashOfConfig":"85"},{"size":3049,"mtime":1664730158171,"results":"128","hashOfConfig":"85"},{"size":753,"mtime":1664602035780,"results":"129","hashOfConfig":"85"},{"size":1885,"mtime":1664809693413,"results":"130","hashOfConfig":"85"},{"size":2550,"mtime":1664789966091,"results":"131","hashOfConfig":"85"},{"size":3085,"mtime":1664812640784,"results":"132","hashOfConfig":"85"},{"size":1019,"mtime":1664618898365,"results":"133","hashOfConfig":"85"},{"size":1177,"mtime":1664601910279,"results":"134","hashOfConfig":"85"},{"size":1262,"mtime":1664605930495,"results":"135","hashOfConfig":"85"},{"size":2228,"mtime":1666951495853,"results":"136","hashOfConfig":"85"},{"size":1834,"mtime":1663801971711,"results":"137","hashOfConfig":"85"},{"size":1262,"mtime":1664605895795,"results":"138","hashOfConfig":"85"},{"size":1376,"mtime":1664375715241,"results":"139","hashOfConfig":"85"},{"size":1557,"mtime":1664812665328,"results":"140","hashOfConfig":"85"},{"size":642,"mtime":1663900514802,"results":"141","hashOfConfig":"85"},{"size":2011,"mtime":1664532939590,"results":"142","hashOfConfig":"85"},{"size":2119,"mtime":1664605426599,"results":"143","hashOfConfig":"85"},{"size":748,"mtime":1664446676577,"results":"144","hashOfConfig":"85"},{"size":600,"mtime":1664445583464,"results":"145","hashOfConfig":"85"},{"size":1011,"mtime":1664205288780,"results":"146","hashOfConfig":"85"},{"size":687,"mtime":1664120122693,"results":"147","hashOfConfig":"85"},{"size":3684,"mtime":1666952135653,"results":"148","hashOfConfig":"85"},{"size":2524,"mtime":1667198974029,"results":"149","hashOfConfig":"85"},{"size":3076,"mtime":1666953173560,"results":"150","hashOfConfig":"85"},{"size":1339,"mtime":1664889506624,"results":"151","hashOfConfig":"85"},{"size":2996,"mtime":1666951511661,"results":"152","hashOfConfig":"85"},{"size":89,"mtime":1664201180947,"results":"153","hashOfConfig":"85"},{"size":565,"mtime":1664445828727,"results":"154","hashOfConfig":"85"},{"size":2023,"mtime":1664875351269,"results":"155","hashOfConfig":"85"},{"size":34,"mtime":1666326850733,"results":"156","hashOfConfig":"85"},{"size":159,"mtime":1664816648559,"results":"157","hashOfConfig":"85"},{"size":169,"mtime":1664816916259,"results":"158","hashOfConfig":"85"},{"size":207,"mtime":1664544025608,"results":"159","hashOfConfig":"85"},{"size":476,"mtime":1664776366053,"results":"160","hashOfConfig":"85"},{"size":33,"mtime":1664889207045,"results":"161","hashOfConfig":"85"},{"size":115,"mtime":1664889187927,"results":"162","hashOfConfig":"85"},{"size":218,"mtime":1667219748635,"results":"163","hashOfConfig":"85"},{"size":100,"mtime":1667219740803,"results":"164","hashOfConfig":"85"},{"size":149,"mtime":1667220391204,"results":"165","hashOfConfig":"85"},{"size":269,"mtime":1667220995848,"results":"166","hashOfConfig":"85"},{"size":222,"mtime":1667220966578,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"sjwpvr",{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"171"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"193"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"193"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"193"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"171"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"171"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"171"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"193"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"193"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"193"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"171"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"193"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"193"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"171"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"193"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398"},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"171"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"193"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\index.tsx",[],[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\App.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\styles\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\styles\\globalStyle.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\auth\\index.jsx",[],[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\styles\\reset.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\auth\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\main\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\main\\styled.ts",[],[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\todays\\styled.ts",[],[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Button\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimeInputButton\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyTime\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TitleText\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Footer\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Habit\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Header\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\List\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimesFormTemplate\\index.tsx",["440","441","442"],[],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport * as S from \"./styled\";\r\nimport { TodayTime } from \"src/components\";\r\n\r\nexport interface TimesFormTemplateProps {\r\n  formType: \"today\" | \"habit\" | \"goal\";\r\n  todayForm: React.ReactNode;\r\n  habitForm: React.ReactNode;\r\n  goalForm: React.ReactNode;\r\n}\r\n\r\nexport const TimesFormTemplate: React.FC<TimesFormTemplateProps> = ({\r\n  formType,\r\n  todayForm,\r\n  habitForm,\r\n  goalForm,\r\n}) => {\r\n  return (\r\n    <>\r\n      <S.ListOfMenu>\r\n        <S.ListTypeContainer>\r\n          <S.TodayStudyContainer formType=\"today\">\r\n            <S.TodayStudy to=\"/time/today\">오늘의 공부</S.TodayStudy>\r\n          </S.TodayStudyContainer>\r\n          <S.HabitSetContainer formType=\"habit\">\r\n            <S.HabitSet to=\"/time/habit\">습관 관리</S.HabitSet>\r\n          </S.HabitSetContainer>\r\n          <S.MyGoalContainer formType=\"goal\">\r\n            <S.MyGoal to=\"/time/goal\">나의 목표</S.MyGoal>\r\n          </S.MyGoalContainer>\r\n        </S.ListTypeContainer>\r\n      </S.ListOfMenu>\r\n      <S.FlexContainer>\r\n        {formType === \"today\" ? todayForm : <></>}\r\n        {formType === \"habit\" ? habitForm : <></>}\r\n        {formType === \"goal\" ? goalForm : <></>}\r\n      </S.FlexContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Navbar\\index.jsx",["443","444"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { host } from \"src/LinkHost\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const Navbar = () => {\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://${host}:8080/auth/auth`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setTeaState({ ...teaState, status: false });\r\n        } else {\r\n          setTeaState({\r\n            t_job: response.data.t_job,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    setTeaState({ t_job: \"\", status: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.NavbarContainer>\r\n        <S.NavbarFormGroup>\r\n          <S.Logo>SKYPLANNER</S.Logo>\r\n        </S.NavbarFormGroup>\r\n      </S.NavbarContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Intro\\index.jsx",["445"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { host } from \"src/LinkHost\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const Intro = () => {\r\n  const isDeskTop = useMediaQuery({ minWidth: \"50rem\" });\r\n  const navigate = useNavigate();\r\n  const FuncLogout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    setAuthState({\r\n      user_id: \"\",\r\n      user_name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n  const FuncLogin = () => {\r\n    navigate(\"/auth/login\");\r\n  };\r\n  const FuncRegister = () => {\r\n    navigate(\"/auth/register\");\r\n  };\r\n  const FuncTime = () => {\r\n    navigate(\"/time/today\");\r\n  };\r\n  const FuncProfile = () => {\r\n    navigate(`/myinfo/myplan/${authState.user_id}`);\r\n  };\r\n  const FuncNotLogged = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const FuncSt = () => {\r\n    navigate(\"/st\");\r\n  };\r\n  const [authState, setAuthState] = useState({\r\n    id: 0,\r\n    user_id: \"\",\r\n    user_name: \"\",\r\n    status: false,\r\n  });\r\n\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://${host}:8080/auth/auth`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.error) {\r\n          setAuthState({ ...authState, status: false });\r\n          setTeaState({ ...teaState, status: false });\r\n        } else {\r\n          setAuthState({\r\n            id: res.data.id,\r\n            user_id: res.data.user_id,\r\n            user_name: res.data.user_name,\r\n            status: true,\r\n          });\r\n          setTeaState({\r\n            t_job: res.data.t_job,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  /**\r\n   * authState를 디펜던시에 넣어 상태가 업데이트 될 때 한번 더 사용하여\r\n   * \"로그인해야 이용가능한 서비스입니다!\" 라는 문장을 로그인 상태에 따라\r\n   * 바꿔서 보여줄 수 있다.\r\n   */\r\n\r\n  return (\r\n    <S.Background>\r\n      {!authState.status ? (\r\n        <div style={{ textAlign: \"center\", marginBottom: \"5rem\" }}>\r\n          로그인해야 이용가능한 서비스입니다!\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <S.MainContainer>\r\n        {!authState.status ? (\r\n          <S.AuthContainer>\r\n            <S.Flex>\r\n              <S.Logout onClick={FuncLogin}>\r\n                <S.AuthTitle>로그인</S.AuthTitle>\r\n              </S.Logout>\r\n              <S.Logout onClick={FuncRegister}>\r\n                <S.AuthTitle>회원가입</S.AuthTitle>\r\n              </S.Logout>\r\n            </S.Flex>\r\n          </S.AuthContainer>\r\n        ) : (\r\n          <S.AuthContainer>\r\n            <S.Flex>\r\n              <S.auth>\r\n                <S.AuthTitle style={{ marginTop: \"0.2rem\" }}>\r\n                  {teaState.t_job === \"teacher\" ? (\r\n                    <div onClick={FuncSt}>학생관리</div>\r\n                  ) : (\r\n                    authState.user_name\r\n                  )}\r\n                </S.AuthTitle>\r\n              </S.auth>\r\n              <S.Logout onClick={FuncLogout}>\r\n                <S.AuthTitle>로그아웃</S.AuthTitle>\r\n              </S.Logout>\r\n            </S.Flex>\r\n          </S.AuthContainer>\r\n        )}\r\n        <S.SectionContainer>\r\n          <S.SectionOne onClick={FuncTime}>\r\n            <S.TitleContainer>\r\n              <S.SectionTitle>공부시간 적으러 가기</S.SectionTitle>\r\n              <S.explainContainer>\r\n                <S.explainBox>\r\n                  오늘 자신의 일과를 적어주세요.\r\n                  <br /> 학습관리에 도움이 됩니다🙂\r\n                </S.explainBox>\r\n              </S.explainContainer>\r\n            </S.TitleContainer>\r\n          </S.SectionOne>\r\n        </S.SectionContainer>\r\n        <S.SectionContainer>\r\n          <S.SectionTwo\r\n            onClick={authState.status ? FuncProfile : FuncNotLogged}\r\n          >\r\n            <S.TitleContainer>\r\n              <S.SectionTitle>프로필</S.SectionTitle>\r\n              <S.explainContainer>\r\n                {isDeskTop ? (\r\n                  <S.explainBox>\r\n                    날짜별로 자신이 공부한 시간과\r\n                    <br /> 총 공부량, 하루 평균 공부량을 볼 수 있습니다.\r\n                  </S.explainBox>\r\n                ) : (\r\n                  <S.explainBox>\r\n                    날짜별로 자신이 공부한 시간과\r\n                    <br /> 총 공부량, 하루 평균 공부량을 <br />볼 수 있습니다.\r\n                  </S.explainBox>\r\n                )}\r\n              </S.explainContainer>\r\n            </S.TitleContainer>\r\n          </S.SectionTwo>\r\n        </S.SectionContainer>\r\n      </S.MainContainer>\r\n    </S.Background>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimeData\\index.jsx",["446","447"],[],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { Horizontal, HorizontalContainer } from \"../MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\nimport { BarGraph, CircleGraph, LineGraph } from \"../GraphList\";\r\nimport { host } from \"src/LinkHost\";\r\n\r\nexport const TimeData = () => {\r\n  let { id } = useParams();\r\n  const [timeData, setTimeData] = useState({});\r\n  const [habitData, setHabitData] = useState({});\r\n  const [goalData, setGoalData] = useState({});\r\n  const [authState, setAuthState] = useState({\r\n    id: 0,\r\n    user_id: \"\",\r\n    status: false,\r\n  });\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  const [listOfPosts, setListOfPosts] = useState({\r\n    createdAt: \"\",\r\n  });\r\n  const lifeStyleAm = useMemo(() => [\r\n    {\r\n      id: 1,\r\n      habitAm: \"기상시간AM\",\r\n      habitTimeAm: habitData.morningAm,\r\n    },\r\n    {\r\n      id: 2,\r\n      habitAm: \"취침시간AM\",\r\n      habitTimeAm: habitData.nightAm,\r\n    },\r\n  ]);\r\n  const lifeStylePm = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        habit: \"기상시간PM\",\r\n        habitTime: habitData.morning,\r\n      },\r\n      {\r\n        id: 2,\r\n        habit: \"취침시간PM\",\r\n        habitTime: habitData.night,\r\n      },\r\n    ],\r\n    [habitData]\r\n  );\r\n  const breakTime = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        habit: \"휴식시간H\",\r\n        habitTime: habitData.break,\r\n      },\r\n    ],\r\n    [habitData]\r\n  );\r\n  const lunchSleep = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n      },\r\n      {\r\n        id: 3,\r\n        habit: \"낮잠시간H\",\r\n        habitTime: habitData.sleep,\r\n      },\r\n      {\r\n        id: 4,\r\n      },\r\n    ],\r\n    [habitData]\r\n  );\r\n  const goalInfo = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        goal: \"목표기상시간AM\",\r\n        goalTime: goalData.GoalMorning,\r\n      },\r\n      {\r\n        id: 2,\r\n        goal: \"목표취침시간PM\",\r\n        goalTime: goalData.GoalNight,\r\n      },\r\n    ],\r\n    [goalData]\r\n  );\r\n  const subData = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        sub: \"국어\",\r\n        time: timeData.kor,\r\n      },\r\n      {\r\n        id: 2,\r\n        sub: \"영어\",\r\n        time: timeData.eng,\r\n      },\r\n      {\r\n        id: 3,\r\n        sub: \"수학\",\r\n        time: timeData.math,\r\n      },\r\n      {\r\n        id: 4,\r\n        sub: \"과학\",\r\n        time: timeData.sci,\r\n      },\r\n      {\r\n        id: 5,\r\n        sub: \"사회\",\r\n        time: timeData.com,\r\n      },\r\n      {\r\n        id: 6,\r\n        sub: \"한국사\",\r\n        time: timeData.kh,\r\n      },\r\n      {\r\n        id: 7,\r\n        sub: \"공부\",\r\n        time: timeData.study,\r\n      },\r\n    ],\r\n    [timeData]\r\n  );\r\n  const goalGraphData = useMemo(\r\n    () => ({\r\n      labels: goalInfo.map((val) => val.goal),\r\n      datasets: [\r\n        {\r\n          label: \"시간데이터\",\r\n          data: goalInfo.map((val) => val.goalTime),\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n            \"rgba(255, 205, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(84, 221, 154, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgb(255, 99, 132)\",\r\n            \"rgb(255, 159, 64)\",\r\n            \"rgb(255, 205, 86)\",\r\n            \"rgb(75, 192, 192)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(153, 102, 255)\",\r\n            \"rgb(84, 221, 154)\",\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    }),\r\n    [goalInfo]\r\n  );\r\n  const lifeStyleData = useMemo(\r\n    () => ({\r\n      labels: [\"기상시간\", \"취침시간\", \"낮잠시간\", \"휴식시간\"],\r\n\r\n      datasets: [\r\n        {\r\n          label: \"오전 시간데이터\",\r\n          data: lifeStyleAm.map((val) => val.habitTimeAm),\r\n          backgroundColor: [\"rgb(88, 104, 252, 0.2)\"],\r\n          borderColor: [\"rgb(88, 104, 252)\"],\r\n        },\r\n        {\r\n          label: \"오후 시간데이터\",\r\n          data: lifeStylePm.map((val) => val.habitTime),\r\n          backgroundColor: [\"rgb(77, 67, 69, 0.2)\"],\r\n          borderColor: [\"rgb(77, 67, 69)\"],\r\n        },\r\n        {\r\n          label: \"낮잠시간\",\r\n          data: lunchSleep.map((val) => val.habitTime),\r\n          backgroundColor: [\"rgb(188, 188, 188, 0.2\"],\r\n          borderColor: [\"rgb(188, 188, 188)\"],\r\n        },\r\n        {\r\n          label: \"휴식시간\",\r\n          data: breakTime.map((val) => val.habitTime),\r\n          backgroundColor: [\"rgb(133, 205, 130, 0.2\"],\r\n          borderColor: [\"rgb(133, 205, 130)\"],\r\n        },\r\n      ],\r\n    }),\r\n    [lifeStylePm, lifeStyleAm, breakTime, lunchSleep]\r\n  );\r\n  const time = useMemo(\r\n    () => ({\r\n      labels: subData.map((val) => val.sub),\r\n      datasets: [\r\n        // 데이터셋으로 하나씩 만들면 됨 그래서 데이터 셋 안에 내용을 7개만들면 댐\r\n        {\r\n          label: \"국어\",\r\n          borderRadius: 10,\r\n          data: subData.map((val) => val.time), //좀 불편하긴 한데 그냥 하나 하나 만들어야 할 거 같기도 하고\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n            \"rgba(255, 205, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(84, 221, 154, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgb(255, 99, 132)\",\r\n            \"rgb(255, 159, 64)\",\r\n            \"rgb(255, 205, 86)\",\r\n            \"rgb(75, 192, 192)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(153, 102, 255)\",\r\n            \"rgb(84, 221, 154)\",\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    }),\r\n    [subData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://${host}:8080/auth/auth`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.error) {\r\n          setAuthState({ ...authState, status: false });\r\n          setTeaState({ ...teaState, status: false });\r\n        } else {\r\n          setAuthState({\r\n            id: res.data.id,\r\n            user_id: res.data.user_id,\r\n            status: true,\r\n          });\r\n          setTeaState({\r\n            status: true,\r\n            t_job: res.data.t_job,\r\n          });\r\n        }\r\n      });\r\n    axios.get(`http://${host}:8080/myhabit/byId/${id}`).then((res) => {\r\n      setHabitData(res.data);\r\n    });\r\n    axios.get(`http://${host}:8080/mygoal/byId/${id}`).then((res) => {\r\n      setGoalData(res.data);\r\n    });\r\n    axios.get(`http://${host}:8080/todaytimes/byId/${id}`).then((res) => {\r\n      setListOfPosts(res.data);\r\n      setTimeData(res.data);\r\n    });\r\n  }, []);\r\n  console.log(teaState, \"1\");\r\n  return (\r\n    <>\r\n      <S.TimeDataContainer>\r\n        <S.TimeTextContainer>\r\n          <S.TimeText>\r\n            {listOfPosts.user_id}\r\n            {listOfPosts.createdAt.slice(5, 7)}월{\" \"}\r\n            {listOfPosts.createdAt.slice(8, 10)}일 데이터\r\n          </S.TimeText>\r\n        </S.TimeTextContainer>\r\n        <S.TitleContainer style={{ marginTop: \"8rem\" }}>\r\n          <S.TitleText>공부시간</S.TitleText>\r\n        </S.TitleContainer>\r\n        <HorizontalContainer>\r\n          <Horizontal />\r\n        </HorizontalContainer>\r\n        {authState.user_id === listOfPosts.user_id ||\r\n        teaState.t_job === \"teacher\" ? (\r\n          <S.TimeDataBoxContainer>\r\n            <S.GraphSize2>\r\n              <BarGraph chartData={time} />\r\n            </S.GraphSize2>\r\n            <S.TitleContainer style={{ marginTop: \"8rem\" }}>\r\n              <S.TitleText>생활습관</S.TitleText>\r\n            </S.TitleContainer>\r\n            <HorizontalContainer>\r\n              <Horizontal />\r\n            </HorizontalContainer>\r\n            <S.GraphSize2>\r\n              <LineGraph chartData={lifeStyleData} />\r\n            </S.GraphSize2>\r\n            <S.TitleContainer style={{ marginTop: \"8rem\" }}>\r\n              <S.TitleText>습관목표</S.TitleText>\r\n            </S.TitleContainer>\r\n            <HorizontalContainer>\r\n              <Horizontal />\r\n            </HorizontalContainer>\r\n            <S.GraphSize>\r\n              <CircleGraph\r\n                style={{ height: \"60%\" }}\r\n                chartData={goalGraphData}\r\n              />\r\n            </S.GraphSize>\r\n          </S.TimeDataBoxContainer>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"3rem\",\r\n              fontSize: \"2rem\",\r\n            }}\r\n          >\r\n            다른 학생의 데이터에 접근했어요🤔\r\n          </div>\r\n        )}\r\n      </S.TimeDataContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyTime\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TitleText\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ReviewSlide\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Footer\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Habit\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\List\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Header\\styled.ts",["448"],[],"import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  background: #2cd3e6;\r\n  display: flex;\r\n  padding-top: 2.2rem;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  padding-right: 1.5rem;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  color: #fff;\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding-bottom: 2.2rem;\r\n  letter-spacing: 0.1rem;\r\n`;\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\hooks\\useScrollFadeIn.js",[],[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimesFormTemplate\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Navbar\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Intro\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TimeData\\styled.ts",["449"],[],"import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const TimeDataContainer = styled.div`\r\n  font-family: Pretendard;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TimeTextContainer = styled.div`\r\n  padding-left: 5vw;\r\n  padding-top: 5rem;\r\n`;\r\n\r\nexport const TimeText = styled.div`\r\n  font-size: 4rem;\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\nexport const TimeDataBoxContainer = styled.div`\r\n  padding-top: 2rem;\r\n`;\r\n\r\nexport const TimeDataBox = styled.div`\r\n  height: 100rem;\r\n  border-radius: 2rem;\r\n  margin-bottom: 2rem;\r\n  background-color: #d9d9d9;\r\n`;\r\n\r\nexport const TimeDataText = styled.div`\r\n  margin-left: 3rem;\r\n  padding-top: 3rem;\r\n  font-size: 3rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nexport const TitleText = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nexport const GraphSize = styled.div`\r\n  @media screen and (min-width: 50rem) {\r\n    width: 40%;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const GraphSize2 = styled.div`\r\n  @media screen and (min-width: 50rem) {\r\n    width: 80%;\r\n    margin: auto;\r\n  }\r\n`;\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Profile\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\index.tsx",["450"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { host } from \"src/LinkHost\";\r\nimport { Button } from \"src/components/common\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport * as S from \"./styled\";\r\n\r\nexport interface RegisterFormInputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const RegisterForm = React.forwardRef<\r\n  HTMLInputElement,\r\n  RegisterFormInputProps\r\n>(({ autoComplete, placeholder, type, name }, ref) => {\r\n  const navigate = useNavigate();\r\n\r\n  let initialValues = {\r\n    user_name: \"\",\r\n    user_id: \"\",\r\n    user_pw: \"\",\r\n    user_agree: \"checked\",\r\n  };\r\n  const [checked, setChecked] = useState(false);\r\n  const checkHandler = () => {\r\n    setChecked(!checked);\r\n    initialValues.user_agree = \"\";\r\n  };\r\n  const valueInsert = () => {\r\n    setChecked(true);\r\n  };\r\n  console.log(initialValues.user_agree);\r\n  const validationSchema = Yup.object().shape({\r\n    user_name: Yup.string().required(),\r\n    user_id: Yup.string().required(),\r\n    user_pw: Yup.string().required(),\r\n    user_agree: Yup.string().required(),\r\n  });\r\n  const onSubmit = (data: any) => {\r\n    axios.post(`http://${host}:8080/auth`, data).then(() => {\r\n      console.log(data);\r\n      navigate(\"/auth/login\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인되어 있습니다.\");\r\n    }\r\n  }, []);\r\n  const enableButton = checked === false ? true : false;\r\n  return (\r\n    <S.FormInputContainer ref={ref}>\r\n      <S.InputElementContainer>\r\n        <S.InputContainer>\r\n          <Formik\r\n            onSubmit={onSubmit}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n          >\r\n            <Form>\r\n              <S.Label>이름</S.Label>\r\n              <S.InputElement autoComplete=\"off\" name=\"user_name\" />\r\n              <S.Label>아이디</S.Label>\r\n              <S.InputElement type=\"text\" autoComplete=\"off\" name=\"user_id\" />\r\n              <S.Label>비밀번호</S.Label>\r\n              <S.InputElement\r\n                autoComplete=\"off\"\r\n                name=\"user_pw\"\r\n                type=\"password\"\r\n              />\r\n              <S.AgreeCheck\r\n                type=\"checkbox\"\r\n                id=\"user_agree\"\r\n                name=\"user_agree\"\r\n                onClick={valueInsert}\r\n                onChange={checkHandler}\r\n              />\r\n              개인정보 수집 및 이용 동의<strong>(필수)</strong>\r\n              <Button\r\n                disabled={enableButton}\r\n                style={{\r\n                  backgroundColor: enableButton === false ? \"black\" : \"#afafaf\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </Form>\r\n          </Formik>\r\n        </S.InputContainer>\r\n      </S.InputElementContainer>\r\n    </S.FormInputContainer>\r\n  );\r\n});\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\GoalTime\\index.jsx",["451"],[],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"src/components\";\r\nimport { host } from \"src/LinkHost\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const GoalTime = () => {\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    GoalMorning: 0,\r\n    GoalNight: 0,\r\n  };\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인해야 이용 가능한 서비스입니다.\");\r\n    }\r\n  }, []);\r\n  const validationSchema = Yup.object().shape({\r\n    GoalMorning: Yup.number().required(\"목표기상시간\"),\r\n    GoalNight: Yup.number().required(\"목표취침시간\"),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(`http://${host}:8080/mygoal`, data, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then((response) => {\r\n        alert(\"오늘도 수고했어요!😀\");\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <S.InputTimeContainer>\r\n        <S.InputContainer>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <label>목표기상시간H</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"GoalMorning\" />\r\n              <label>목표취침시간H</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"GoalNight\" />\r\n              <Button style={{ width: \"13.5rem\" }} type=\"submit\">\r\n                제출\r\n              </Button>\r\n            </Form>\r\n          </Formik>\r\n        </S.InputContainer>\r\n      </S.InputTimeContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\TodayTime\\index.jsx",["452"],[],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"src/components\";\r\nimport { host } from \"src/LinkHost\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const TodayTime = () => {\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    kor: 0,\r\n    eng: 0,\r\n    math: 0,\r\n    sci: 0,\r\n    com: 0,\r\n    kh: 0,\r\n    study: 0,\r\n  };\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인해야 이용 가능한 서비스입니다.\");\r\n    }\r\n  }, []);\r\n  const validationSchema = Yup.object().shape({\r\n    kor: Yup.number().required(\"국어\"),\r\n    eng: Yup.number().required(\"영어\"),\r\n    math: Yup.number().required(\"수학\"),\r\n    sci: Yup.number().required(\"과학\"),\r\n    com: Yup.number().required(\"사회\"),\r\n    kh: Yup.number().required(\"한국사\"),\r\n    study: Yup.number().required(\"일반공부\"),\r\n  });\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(`http://${host}:8080/todaytimes`, data, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/time/habit\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <S.InputTimeContainer>\r\n        <S.InputContainer>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <label>국어</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"kor\" />\r\n              <label>영어</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"eng\" />\r\n              <label>수학</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"math\" />\r\n              <label>과학</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"sci\" />\r\n              <label>사회</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"com\" />\r\n              <label>한국사</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"kh\" />\r\n              <label>일반공부</label>\r\n              <S.InputTime autoComplete=\"off\" name=\"study\" />\r\n              <Button style={{ width: \"13.5rem\" }} type=\"submit\">\r\n                제출\r\n              </Button>\r\n            </Form>\r\n          </Formik>\r\n        </S.InputContainer>\r\n      </S.InputTimeContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\HabitTime\\index.jsx",["453"],[],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { host } from \"src/LinkHost\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"src/components\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const HabitTime = () => {\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    morning: 0,\r\n    morningAm: 0,\r\n    night: 0,\r\n    nightAm: 0,\r\n    sleep: 0,\r\n    break: 0,\r\n  };\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인해야 이용 가능한 서비스입니다.\");\r\n    }\r\n  }, []);\r\n  const validationSchema = Yup.object().shape({\r\n    morning: Yup.number().required(\"기상시간PM\"),\r\n    morningAm: Yup.number().required(\"기상시간AM\"),\r\n    night: Yup.number().required(\"취침시간PM\"),\r\n    nightAm: Yup.number().required(\"취침시간AM\"),\r\n    sleep: Yup.number().required(\"낮잠\"),\r\n    break: Yup.number().required(\"휴식\"),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(`http://${host}:8080/myhabit`, data, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/time/goal\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <S.InputTimeContainer>\r\n        <S.InputContainer>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <S.InputFlexContainer>\r\n                <S.InputFlex>\r\n                  <label>기상시간AM</label>\r\n                  <S.InputTime autoComplete=\"off\" name=\"morningAm\" />\r\n                </S.InputFlex>\r\n                <S.InputFlex>\r\n                  <label>기상시간PM</label>\r\n                  <S.InputTime autoComplete=\"off\" name=\"morning\" />\r\n                </S.InputFlex>\r\n              </S.InputFlexContainer>\r\n              <S.InputFlexContainer>\r\n                <S.InputFlex>\r\n                  <label>취침시간AM</label>\r\n                  <S.InputTime autoComplete=\"off\" name=\"nightAm\" />\r\n                </S.InputFlex>\r\n                <S.InputFlex>\r\n                  <label>취침시간PM</label>\r\n                  <S.InputTime autoComplete=\"off\" name=\"night\" />\r\n                </S.InputFlex>\r\n              </S.InputFlexContainer>\r\n              <S.MarginCenter>\r\n                <label>낮잠시간H</label>\r\n                <S.InputTime autoComplete=\"off\" name=\"sleep\" />\r\n                <label>휴식시간H</label>\r\n                <S.InputTime autoComplete=\"off\" name=\"break\" />\r\n              </S.MarginCenter>\r\n              <Button\r\n                style={{ width: \"13.5rem\", margin: \"auto\" }}\r\n                type=\"submit\"\r\n              >\r\n                제출\r\n              </Button>\r\n            </Form>\r\n          </Formik>\r\n        </S.InputContainer>\r\n      </S.InputTimeContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\GoalTime\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\TodayTime\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StList\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyPlan\\HabitTime\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ReviewSlide\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyInfoTemplate\\index.tsx",["454"],[],"import React, { useState, useEffect } from \"react\";\r\nimport * as S from \"./styled\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { host } from \"src/LinkHost\";\r\n\r\nexport interface MyInfoTemplateProps {\r\n  infoType: \"myplan\" | \"profile\";\r\n  listToday: React.ReactNode;\r\n  profile: React.ReactNode;\r\n}\r\n\r\nexport const MyInfoTemplate: React.FC<MyInfoTemplateProps> = ({\r\n  infoType,\r\n  listToday,\r\n  profile,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [authState, setAuthState] = useState({ user_id: \"\", status: false });\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://${host}:8080/auth/auth`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\") as any,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setAuthState({ ...authState, status: false });\r\n        } else {\r\n          setAuthState({\r\n            user_id: response.data.user_id,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/auth/login\");\r\n      alert(\"로그인해주세요!😅\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <S.ListOfMenu>\r\n        <S.ListTypeContainer\r\n          style={{\r\n            paddingLeft: infoType === \"profile\" ? \"4rem\" : \"0rem\",\r\n          }}\r\n        >\r\n          <S.MyPlanContainer infoType=\"myplan\">\r\n            <S.TodayStudy to={`/myinfo/myplan/${authState.user_id}`}>\r\n              마이플랜\r\n            </S.TodayStudy>\r\n          </S.MyPlanContainer>\r\n          <S.ProfileContainer infoType=\"profile\">\r\n            <S.TodayStudy to={`/myinfo/profile/${authState.user_id}`}>\r\n              프로필\r\n            </S.TodayStudy>\r\n          </S.ProfileContainer>\r\n        </S.ListTypeContainer>\r\n      </S.ListOfMenu>\r\n      <S.FlexContainer>\r\n        {infoType === \"myplan\" ? listToday : <></>}\r\n        {infoType === \"profile\" ? profile : <></>}\r\n      </S.FlexContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\MyInfoTemplate\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\todays\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\info\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ShowMyPlan\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ProFile\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\index.jsx",["455"],[],"import axios from \"axios\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\nimport { Button } from \"src/components/common\";\r\nimport { host } from \"src/LinkHost\";\r\nimport {\r\n  InputElement,\r\n  InputElementDiv,\r\n  InputElementDivContainer,\r\n  LoginLogo,\r\n  LogoContainer,\r\n} from \"../FormInput/styled\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\n// assets\r\nimport LoginIconPNG from \"src/assets/LoginIcon.png\";\r\nimport PwIconPNG from \"src/assets/PwIcon.png\";\r\n\r\nexport const TeacherForm = () => {\r\n  const [t_id, setTid] = useState(\"\");\r\n  const [t_pw, setTpw] = useState(\"\");\r\n  const [t_job, setTjob] = useState(\"\");\r\n  const { setAuthState } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const login = () => {\r\n    const data = { t_id: t_id, t_pw: t_pw, t_job: t_job };\r\n    axios.post(`http://${host}:8080/teacher/login`, data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        navigate(\"/\");\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n        setAuthState({\r\n          t_id: response.data.t_id,\r\n          t_job: response.data.t_job,\r\n          id: response.data.id,\r\n          status: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인되었습니다.\");\r\n    }\r\n  }, []);\r\n  const enableButton = t_job === \"teacher\" ? false : true;\r\n  return (\r\n    <>\r\n      <S.FormInputContainer>\r\n        <S.TitleContainer>\r\n          <S.Title>선생님 로그인</S.Title>\r\n        </S.TitleContainer>\r\n        <S.InputElementContainer>\r\n          <S.InputContainer>\r\n            <S.empty />\r\n            <InputElementDiv>\r\n              <InputElementDivContainer>\r\n                <LogoContainer>\r\n                  <LoginLogo src={LoginIconPNG} />\r\n                </LogoContainer>\r\n                <InputElement\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setTid(event.target.value);\r\n                  }}\r\n                  placeholder=\"아이디\"\r\n                />\r\n              </InputElementDivContainer>\r\n            </InputElementDiv>\r\n            <InputElementDiv>\r\n              <InputElementDivContainer>\r\n                <LogoContainer>\r\n                  <LoginLogo src={PwIconPNG} />\r\n                </LogoContainer>\r\n                <InputElement\r\n                  type=\"password\"\r\n                  onChange={(event) => {\r\n                    setTpw(event.target.value);\r\n                  }}\r\n                  placeholder=\"비밀번호\"\r\n                />\r\n              </InputElementDivContainer>\r\n            </InputElementDiv>\r\n            <S.LabelContainer>\r\n              <S.Label>아래에</S.Label>\r\n              <S.teacher>‘teacher’</S.teacher>\r\n              <S.Label>을 입력해주세요.</S.Label>\r\n            </S.LabelContainer>\r\n            <S.InputElement\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setTjob(event.target.value);\r\n              }}\r\n            />\r\n          </S.InputContainer>\r\n          <S.ButtonContainer>\r\n            <Button\r\n              disabled={enableButton}\r\n              style={{\r\n                backgroundColor: enableButton === true ? \"#afafaf\" : \"black\",\r\n              }}\r\n              onClick={login}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </S.ButtonContainer>\r\n        </S.InputElementContainer>\r\n      </S.FormInputContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ProFile\\index.tsx",["456"],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StList\\index.jsx",["457","458"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { host } from \"src/LinkHost\";\r\nimport {\r\n  Horizontal,\r\n  HorizontalContainer,\r\n} from \"src/components/common/MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const StList = () => {\r\n  //mouseEvent -> onMouse~\r\n  const [listOfUsers, setListOfUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\r\n    } else {\r\n      axios\r\n        .get(`http://${host}:8080/auth/sts`, {\r\n          //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          setListOfUsers(response.data.listOfUsers);\r\n        });\r\n\r\n      axios\r\n        .get(`http://${host}:8080/auth/auth`, {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.error) {\r\n            setTeaState({ ...teaState, status: false });\r\n          } else {\r\n            setTeaState({\r\n              t_job: response.data.t_job,\r\n              status: true,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n  return (\r\n    <S.Container>\r\n      {teaState.status ? (\r\n        <>\r\n          <S.SearchContainer>\r\n            <S.Search>\r\n              <S.SearchInput\r\n                type={\"text\"}\r\n                placeholder={\"학생 검색\"}\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n              />\r\n            </S.Search>\r\n          </S.SearchContainer>\r\n          <HorizontalContainer>\r\n            <Horizontal />\r\n          </HorizontalContainer>\r\n          <S.ListContainer>\r\n            {listOfUsers\r\n              .filter((value) => {\r\n                if (searchTerm === \"\") {\r\n                  return value.user_name;\r\n                } else if (\r\n                  value.user_name\r\n                    .toLowerCase()\r\n                    .includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return value;\r\n                }\r\n              })\r\n              .map((value, key) => {\r\n                return (\r\n                  <S.List key={key}>\r\n                    <S.StName to={`/myinfo/myplan/${value.user_id}`}>\r\n                      <S.StText>{value.user_name}</S.StText>\r\n                    </S.StName>\r\n                  </S.List>\r\n                );\r\n              })}\r\n          </S.ListContainer>\r\n        </>\r\n      ) : (\r\n        <S.Alert>*학생계정으로 로그인되어있습니다.*</S.Alert>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Snackbar\\index.tsx",["459"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { host } from \"src/LinkHost\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const Toastify = styled(ToastContainer)`\r\n  @media screen and (min-width: 40rem) {\r\n    width: 27rem;\r\n  }\r\n`;\r\n\r\nexport const SnackBar = () => {\r\n  const [authState, setAuthState] = useState({\r\n    status: false,\r\n  });\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      toast.success(\"로그인 되어있음😎\", {\r\n        autoClose: 2000,\r\n\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      toast.info(\"로그인 되어있지 않음😗\", {\r\n        autoClose: 2000,\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n    axios\r\n      .get(`http://${host}:8080/auth/auth`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\") as any,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.error) {\r\n          setAuthState({ ...authState, status: false });\r\n        } else {\r\n          setAuthState({\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return <Toastify />;\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\index.jsx",["460"],[],"import axios from \"axios\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"src/components/common\";\r\nimport { host } from \"src/LinkHost\";\r\nimport * as S from \"./styled\";\r\n\r\n// assets\r\nimport LoginIconPNG from \"src/assets/LoginIcon.png\";\r\nimport PwIconPNG from \"src/assets/PwIcon.png\";\r\n\r\nexport const FormInput = () => {\r\n  const [user_id, setUserid] = useState(\"\");\r\n  const [user_pw, setUserpw] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const login = () => {\r\n    const data = { user_id: user_id, user_pw: user_pw };\r\n    axios.post(`http://${host}:8080/auth/login`, data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        navigate(\"/\");\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인되었습니다.\");\r\n    }\r\n  }, []);\r\n  const enableButton = user_pw === \"\" ? true : false;\r\n  return (\r\n    <>\r\n      <S.FormInputContainer>\r\n        <S.InputElementContainer>\r\n          <S.InputContainer>\r\n            <S.InputElementDiv>\r\n              <S.InputElementDivContainer>\r\n                <S.LogoContainer>\r\n                  <S.LoginLogo src={LoginIconPNG} />\r\n                </S.LogoContainer>\r\n                <S.InputElement\r\n                  type=\"text\"\r\n                  onChange={(event) => {\r\n                    setUserid(event.target.value);\r\n                  }}\r\n                  placeholder=\"아이디\"\r\n                />\r\n              </S.InputElementDivContainer>\r\n            </S.InputElementDiv>\r\n            <S.InputElementDiv>\r\n              <S.InputElementDivContainer>\r\n                <S.LogoContainer>\r\n                  <S.LoginLogo src={PwIconPNG} />\r\n                </S.LogoContainer>\r\n                <S.InputElement\r\n                  type=\"password\"\r\n                  onChange={(event) => {\r\n                    setUserpw(event.target.value);\r\n                  }}\r\n                  placeholder=\"비밀번호\"\r\n                  value={user_pw}\r\n                />\r\n              </S.InputElementDivContainer>\r\n            </S.InputElementDiv>\r\n            <Button\r\n              disabled={enableButton}\r\n              style={{\r\n                backgroundColor: enableButton === true ? \"#afafaf\" : \"black\",\r\n              }}\r\n              onClick={login}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <S.ChooseMenu>\r\n              <S.Choose to=\"/auth/teacher\">\r\n                <S.goTeacher>선생님</S.goTeacher>로그인\r\n              </S.Choose>\r\n              <S.verticalChoose>|</S.verticalChoose>\r\n              <S.Choose to=\"/\">Skyplanner</S.Choose>\r\n            </S.ChooseMenu>\r\n          </S.InputContainer>\r\n        </S.InputElementContainer>\r\n      </S.FormInputContainer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\helper\\AuthContext.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\hooks\\useNetwork.js",["461"],[],"import { useState, useEffect } from \"react\";\r\n\r\nexport const useNetwork = (onChange) => {\r\n  const [status, setStatus] = useState(navigator.onLine);\r\n  const handleChange = () => {\r\n    onChange(navigator.onLine);\r\n    setStatus(navigator.onLine);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"online\", handleChange);\r\n    window.addEventListener(\"offline\", handleChange);\r\n    return () => {\r\n      window.removeEventListener(\"online\", handleChange);\r\n      window.removeEventListener(\"offline\", handleChange);\r\n    };\r\n  }, []);\r\n  return status;\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\ShowMyPlan\\index.tsx",["462"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { host } from \"src/LinkHost\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const ShowMyPlan = () => {\r\n  let { id } = useParams(); // 재할당 가능\r\n  let navigate = useNavigate();\r\n  const [listOfPosts, setListOfPosts] = useState([\r\n    {\r\n      id: 0,\r\n      user_id: \"\",\r\n      kor: 0,\r\n      createdAt: \"\",\r\n    },\r\n  ]);\r\n\r\n  //10번 유저의 3번데이터 즉 :id/:id느낌으로 가야할듯 이게 되나?\r\n  //아니면 잔쩌 비효율적이게 한 페이지를 또 만들어서 해보자 내일\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://${host}:8080/todaytimes/byuserId/${id}`)\r\n      .then((response) => {\r\n        setListOfPosts(response.data);\r\n      });\r\n\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/auth/login\");\r\n      alert(\"로그인되어있나요?🤔\");\r\n    }\r\n  }, []);\r\n  console.log(listOfPosts);\r\n  return (\r\n    <S.AllContainer>\r\n      <S.Slider>\r\n        <S.TotalContainer>\r\n          <S.DayContainer>\r\n            {listOfPosts.map((value: any, key: any) => {\r\n              console.log(value.id);\r\n              return (\r\n                <div key={key}>\r\n                  <S.DayTime\r\n                    onClick={() => {\r\n                      navigate(`/myinfo/myplan/${value.user_id}/${value.id}`); //이 경로에다가 그래프 띄우는거 하나 만들어놓고 그래프로 들어가는건 그냥 따로해서 눌러서 들어가야할 것 같당.\r\n                    }} // 나중에 오늘 할 일이에요! 이런식으로 어제 쓴 선생님의 말을 볼 수  있게 할 수 있겠음. 그럼 하루하루 다르니까\r\n                  >\r\n                    {value.createdAt.slice(5, 10)}\r\n                  </S.DayTime>\r\n                </div>\r\n              );\r\n            })}\r\n          </S.DayContainer>\r\n        </S.TotalContainer>\r\n      </S.Slider>\r\n    </S.AllContainer>\r\n  );\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\LinkHost.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\LineGraph\\index.jsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\CircleGraph\\index.jsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\GraphList\\BarGraph\\index.jsx",["463"],[],"import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\n\r\nexport const BarGraph = ({ chartData }) => {\r\n  return <Bar data={chartData} />;\r\n};\r\n","C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\404.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TeacherMenu\\index.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\TeacherMenu\\TeacherInput\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StMenu\\index.tsx",["464"],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Students\\StMenu\\styled.ts",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\pages\\management\\index.tsx",[],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Sidebar\\index.tsx",["465","466"],[],"C:\\Users\\qkrcj\\OneDrive\\문서\\Skyplanner\\SP_frontend\\src\\components\\common\\Sidebar\\styled.ts",[],[],{"ruleId":"467","severity":1,"message":"468","line":1,"column":17,"nodeType":"469","messageId":"470","endLine":1,"endColumn":25},{"ruleId":"467","severity":1,"message":"471","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":17},{"ruleId":"467","severity":1,"message":"472","line":5,"column":10,"nodeType":"469","messageId":"470","endLine":5,"endColumn":19},{"ruleId":"473","severity":1,"message":"474","line":30,"column":6,"nodeType":"475","endLine":30,"endColumn":8,"suggestions":"476"},{"ruleId":"477","severity":1,"message":"478","line":32,"column":9,"nodeType":"469","messageId":"470","endLine":32,"endColumn":15},{"ruleId":"473","severity":1,"message":"479","line":73,"column":6,"nodeType":"475","endLine":73,"endColumn":8,"suggestions":"480"},{"ruleId":"473","severity":1,"message":"481","line":28,"column":23,"nodeType":"469","endLine":28,"endColumn":30},{"ruleId":"473","severity":1,"message":"482","line":270,"column":6,"nodeType":"475","endLine":270,"endColumn":8,"suggestions":"483"},{"ruleId":"467","severity":1,"message":"484","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"484","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"473","severity":1,"message":"485","line":52,"column":6,"nodeType":"475","endLine":52,"endColumn":8,"suggestions":"486"},{"ruleId":"473","severity":1,"message":"485","line":22,"column":6,"nodeType":"475","endLine":22,"endColumn":8,"suggestions":"487"},{"ruleId":"473","severity":1,"message":"485","line":27,"column":6,"nodeType":"475","endLine":27,"endColumn":8,"suggestions":"488"},{"ruleId":"473","severity":1,"message":"485","line":26,"column":6,"nodeType":"475","endLine":26,"endColumn":8,"suggestions":"489"},{"ruleId":"473","severity":1,"message":"490","line":41,"column":6,"nodeType":"475","endLine":41,"endColumn":8,"suggestions":"491"},{"ruleId":"473","severity":1,"message":"485","line":51,"column":6,"nodeType":"475","endLine":51,"endColumn":8,"suggestions":"492"},{"ruleId":"473","severity":1,"message":"493","line":57,"column":6,"nodeType":"475","endLine":57,"endColumn":8,"suggestions":"494"},{"ruleId":"473","severity":1,"message":"495","line":50,"column":6,"nodeType":"475","endLine":50,"endColumn":8,"suggestions":"496"},{"ruleId":"497","severity":1,"message":"498","line":71,"column":31,"nodeType":"499","messageId":"500","endLine":71,"endColumn":33},{"ruleId":"473","severity":1,"message":"501","line":47,"column":6,"nodeType":"475","endLine":47,"endColumn":8,"suggestions":"502"},{"ruleId":"473","severity":1,"message":"485","line":35,"column":6,"nodeType":"475","endLine":35,"endColumn":8,"suggestions":"503"},{"ruleId":"473","severity":1,"message":"504","line":16,"column":6,"nodeType":"475","endLine":16,"endColumn":8,"suggestions":"505"},{"ruleId":"473","severity":1,"message":"506","line":33,"column":6,"nodeType":"475","endLine":33,"endColumn":8,"suggestions":"507"},{"ruleId":"477","severity":1,"message":"508","line":3,"column":19,"nodeType":"469","messageId":"470","endLine":3,"endColumn":26},{"ruleId":"467","severity":1,"message":"509","line":6,"column":9,"nodeType":"469","messageId":"470","endLine":6,"endColumn":17},{"ruleId":"467","severity":1,"message":"510","line":2,"column":13,"nodeType":"469","messageId":"470","endLine":2,"endColumn":14},{"ruleId":"467","severity":1,"message":"511","line":5,"column":16,"nodeType":"469","messageId":"470","endLine":5,"endColumn":23},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'TodayTime' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'teaState'. Either include it or remove the dependency array. You can also do a functional update 'setTeaState(t => ...)' if you only need 'teaState' in the 'setTeaState' call.","ArrayExpression",["512"],"no-unused-vars","'logout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authState' and 'teaState'. Either include them or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["513"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'authState', 'id', and 'teaState'. Either include them or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["514"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["515"],["516"],["517"],["518"],"React Hook useEffect has missing dependencies: 'authState' and 'navigate'. Either include them or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["519"],["520"],"React Hook useEffect has missing dependencies: 'authState', 'id', and 'navigate'. Either include them or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["521"],"React Hook useEffect has missing dependencies: 'navigate' and 'teaState'. Either include them or remove the dependency array. You can also do a functional update 'setTeaState(t => ...)' if you only need 'teaState' in the 'setTeaState' call.",["522"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["523"],["524"],"React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.",["525"],"React Hook useEffect has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["526"],"'ChartJS' is defined but never used.","'navigate' is assigned a value but never used.","'S' is defined but never used.","'setBool' is assigned a value but never used.",{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"533","fix":"535"},{"desc":"533","fix":"536"},{"desc":"533","fix":"537"},{"desc":"538","fix":"539"},{"desc":"533","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"533","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},"Update the dependencies array to be: [teaState]",{"range":"552","text":"553"},"Update the dependencies array to be: [authState, teaState]",{"range":"554","text":"555"},"Update the dependencies array to be: [authState, id, teaState]",{"range":"556","text":"557"},"Update the dependencies array to be: [navigate]",{"range":"558","text":"559"},{"range":"560","text":"559"},{"range":"561","text":"559"},{"range":"562","text":"559"},"Update the dependencies array to be: [authState, navigate]",{"range":"563","text":"564"},{"range":"565","text":"559"},"Update the dependencies array to be: [authState, id, navigate]",{"range":"566","text":"567"},"Update the dependencies array to be: [navigate, teaState]",{"range":"568","text":"569"},"Update the dependencies array to be: [authState]",{"range":"570","text":"571"},{"range":"572","text":"559"},"Update the dependencies array to be: [handleChange]",{"range":"573","text":"574"},"Update the dependencies array to be: [id, navigate]",{"range":"575","text":"576"},[733,735],"[teaState]",[1854,1856],"[authState, teaState]",[6664,6666],"[authState, id, teaState]",[1501,1503],"[navigate]",[588,590],[642,644],[647,649],[1155,1157],"[authState, navigate]",[1493,1495],[1501,1503],"[authState, id, navigate]",[1502,1504],"[navigate, teaState]",[1267,1269],"[authState]",[1025,1027],[537,539],"[handleChange]",[851,853],"[id, navigate]"]