[{"D:\\gitcloneSP\\SP_frontend\\src\\index.tsx":"1","D:\\gitcloneSP\\SP_frontend\\src\\reportWebVitals.ts":"2","D:\\gitcloneSP\\SP_frontend\\src\\App.tsx":"3","D:\\gitcloneSP\\SP_frontend\\src\\styles\\index.ts":"4","D:\\gitcloneSP\\SP_frontend\\src\\pages\\index.ts":"5","D:\\gitcloneSP\\SP_frontend\\src\\components\\index.ts":"6","D:\\gitcloneSP\\SP_frontend\\src\\styles\\globalStyle.ts":"7","D:\\gitcloneSP\\SP_frontend\\src\\pages\\auth\\index.js":"8","D:\\gitcloneSP\\SP_frontend\\src\\styles\\reset.ts":"9","D:\\gitcloneSP\\SP_frontend\\src\\pages\\auth\\styled.ts":"10","D:\\gitcloneSP\\SP_frontend\\src\\pages\\main\\index.tsx":"11","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\index.ts":"12","D:\\gitcloneSP\\SP_frontend\\src\\pages\\main\\styled.ts":"13","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\index.ts":"14","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\GraphList\\index.ts":"15","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Button\\index.ts":"16","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeInputButton\\index.ts":"17","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Students\\index.ts":"18","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\ReviewSlide\\index.tsx":"19","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Footer\\index.tsx":"20","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyTime\\index.tsx":"21","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TitleText\\index.tsx":"22","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Habit\\index.tsx":"23","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Navbar\\index.jsx":"24","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Profile\\index.jsx":"25","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Intro\\index.jsx":"26","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeInput\\index.jsx":"27","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeData\\index.jsx":"28","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyPlanSideBar\\index.jsx":"29","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyTime\\styled.ts":"30","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\ReviewSlide\\styled.ts":"31","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Footer\\styled.ts":"32","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TitleText\\styled.ts":"33","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Habit\\styled.ts":"34","D:\\gitcloneSP\\SP_frontend\\src\\helper\\AuthContext.js":"35","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Navbar\\styled.ts":"36","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Intro\\styled.ts":"37","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Profile\\styled.ts":"38","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeInput\\styled.ts":"39","D:\\gitcloneSP\\SP_frontend\\src\\hooks\\useScrollFadeIn.js":"40","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeData\\styled.ts":"41","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyPlanSideBar\\styled.ts":"42","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\index.tsx":"43","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\index.tsx":"44","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\index.jsx":"45","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\index.jsx":"46","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\GraphList\\BarGraph\\index.jsx":"47","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Students\\StList\\index.jsx":"48","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\styled.ts":"49","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\styled.ts":"50","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\styled.ts":"51","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\styled.ts":"52","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Students\\StList\\styled.ts":"53"},{"size":720,"mtime":1663680846069,"results":"54","hashOfConfig":"55"},{"size":440,"mtime":1663680846071,"results":"56","hashOfConfig":"55"},{"size":1101,"mtime":1663680846051,"results":"57","hashOfConfig":"55"},{"size":32,"mtime":1663680846072,"results":"58","hashOfConfig":"55"},{"size":50,"mtime":1663680846070,"results":"59","hashOfConfig":"55"},{"size":27,"mtime":1663680846067,"results":"60","hashOfConfig":"55"},{"size":1440,"mtime":1663680846072,"results":"61","hashOfConfig":"55"},{"size":644,"mtime":1663680846069,"results":"62","hashOfConfig":"55"},{"size":1547,"mtime":1663680846072,"results":"63","hashOfConfig":"55"},{"size":203,"mtime":1663680846069,"results":"64","hashOfConfig":"55"},{"size":309,"mtime":1663680846070,"results":"65","hashOfConfig":"55"},{"size":463,"mtime":1663680846067,"results":"66","hashOfConfig":"55"},{"size":605,"mtime":1663680846070,"results":"67","hashOfConfig":"55"},{"size":132,"mtime":1663680846056,"results":"68","hashOfConfig":"55"},{"size":29,"mtime":1663680846058,"results":"69","hashOfConfig":"55"},{"size":357,"mtime":1663680846057,"results":"70","hashOfConfig":"55"},{"size":242,"mtime":1663680846066,"results":"71","hashOfConfig":"55"},{"size":27,"mtime":1663680846065,"results":"72","hashOfConfig":"55"},{"size":1927,"mtime":1663680846063,"results":"73","hashOfConfig":"55"},{"size":220,"mtime":1663680846057,"results":"74","hashOfConfig":"55"},{"size":2611,"mtime":1663685991528,"results":"75","hashOfConfig":"55"},{"size":530,"mtime":1663680846067,"results":"76","hashOfConfig":"55"},{"size":670,"mtime":1663680846058,"results":"77","hashOfConfig":"55"},{"size":2808,"mtime":1663680846062,"results":"78","hashOfConfig":"55"},{"size":1169,"mtime":1663680846062,"results":"79","hashOfConfig":"55"},{"size":4253,"mtime":1663680846059,"results":"80","hashOfConfig":"55"},{"size":2550,"mtime":1663680846066,"results":"81","hashOfConfig":"55"},{"size":3262,"mtime":1663680846065,"results":"82","hashOfConfig":"55"},{"size":1365,"mtime":1663680846060,"results":"83","hashOfConfig":"55"},{"size":2136,"mtime":1663686015358,"results":"84","hashOfConfig":"55"},{"size":1064,"mtime":1663680846063,"results":"85","hashOfConfig":"55"},{"size":313,"mtime":1663680846057,"results":"86","hashOfConfig":"55"},{"size":616,"mtime":1663680846067,"results":"87","hashOfConfig":"55"},{"size":1015,"mtime":1663680846059,"results":"88","hashOfConfig":"55"},{"size":89,"mtime":1663680846068,"results":"89","hashOfConfig":"55"},{"size":1850,"mtime":1663681198164,"results":"90","hashOfConfig":"55"},{"size":2738,"mtime":1663680846059,"results":"91","hashOfConfig":"55"},{"size":571,"mtime":1663680846063,"results":"92","hashOfConfig":"55"},{"size":961,"mtime":1663680846066,"results":"93","hashOfConfig":"55"},{"size":1478,"mtime":1663680846068,"results":"94","hashOfConfig":"55"},{"size":732,"mtime":1663680846065,"results":"95","hashOfConfig":"55"},{"size":1115,"mtime":1663680846061,"results":"96","hashOfConfig":"55"},{"size":753,"mtime":1663680846054,"results":"97","hashOfConfig":"55"},{"size":2316,"mtime":1663680846055,"results":"98","hashOfConfig":"55"},{"size":2809,"mtime":1663680846056,"results":"99","hashOfConfig":"55"},{"size":2492,"mtime":1663680846054,"results":"100","hashOfConfig":"55"},{"size":207,"mtime":1663680846058,"results":"101","hashOfConfig":"55"},{"size":2959,"mtime":1663680846064,"results":"102","hashOfConfig":"55"},{"size":1269,"mtime":1663680846054,"results":"103","hashOfConfig":"55"},{"size":1004,"mtime":1663680846055,"results":"104","hashOfConfig":"55"},{"size":1834,"mtime":1663680846056,"results":"105","hashOfConfig":"55"},{"size":1595,"mtime":1663680846054,"results":"106","hashOfConfig":"55"},{"size":1376,"mtime":1663680846064,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"maeq6t",{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"133"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"133"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"133"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"133"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"133"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"133"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"111"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"133"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"133"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"133"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"133"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"D:\\gitcloneSP\\SP_frontend\\src\\index.tsx",[],[],[],"D:\\gitcloneSP\\SP_frontend\\src\\reportWebVitals.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\App.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\styles\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\pages\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\styles\\globalStyle.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\pages\\auth\\index.js",[],[],[],"D:\\gitcloneSP\\SP_frontend\\src\\styles\\reset.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\pages\\auth\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\pages\\main\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\pages\\main\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\GraphList\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Button\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeInputButton\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Students\\index.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\ReviewSlide\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Footer\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyTime\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TitleText\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Habit\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Navbar\\index.jsx",["280"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const Navbar = () => {\r\n  const [authState, setAuthState] = useState({\r\n    user_name: \"\",\r\n    id: \"\",\r\n    status: false,\r\n  });\r\n\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/auth/auth\", {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setAuthState({ ...authState, status: false });\r\n          setTeaState({ ...teaState, status: false });\r\n        } else {\r\n          setAuthState({\r\n            user_name: response.data.user_name,\r\n            id: response.data.id,\r\n            status: true,\r\n          });\r\n          setTeaState({\r\n            t_job: response.data.t_job,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    setAuthState({ user_name: \"\", status: false });\r\n    setTeaState({ t_job: \"\", status: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.NavbarContainer>\r\n        <AuthContext.Provider\r\n          value={{ authState, setAuthState, teaState, setTeaState }}\r\n        >\r\n          <S.NavbarFormGroup>\r\n            {!authState.status ? (\r\n              <>\r\n                <S.NavbarA to=\"auth/login\">로그인</S.NavbarA>\r\n                <S.NavbarA to=\"auth/register\">회원가입</S.NavbarA>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {teaState.t_job === \"teacher\" ? (\r\n                  <></>\r\n                ) : (\r\n                  <S.NavbarA to=\"time/mytime\">My시간</S.NavbarA>\r\n                )}\r\n                {teaState.t_job === \"teacher\" ? (\r\n                  <></>\r\n                ) : (\r\n                  <Link\r\n                    style={{ textDecoration: \"none\", marginRight: \"2vw\" }}\r\n                    to={`/profile/${authState.id}`}\r\n                  >\r\n                    <div style={{ color: \"black\" }}>{authState.user_name}</div>\r\n                  </Link>\r\n                )}\r\n                {teaState.t_job === \"teacher\" ? (\r\n                  <S.NavbarA to=\"st/list\">\r\n                    <S.TextSet>학생관리</S.TextSet>\r\n                  </S.NavbarA>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </>\r\n            )}\r\n            {authState.status && <S.Logout onClick={logout}>Logout</S.Logout>}\r\n          </S.NavbarFormGroup>\r\n        </AuthContext.Provider>\r\n      </S.NavbarContainer>\r\n    </>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Profile\\index.jsx",["281","282","283"],[],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\nimport * as S from \"./styled\";\r\n\r\nexport const Profile = () => {\r\n  let { id } = useParams(); // 재할당 가능\r\n  let navigate = useNavigate();\r\n  const [listOfPosts, setListOfPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/todaytimes/byuserId/${id}`)\r\n      .then((response) => {\r\n        setListOfPosts(response.data);\r\n      });\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/auth/login\");\r\n      alert(\"로그인해주세요.\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <S.TotalContainer>\r\n      {listOfPosts.map((value, key) => {\r\n        return (\r\n          <S.DayContainer key={key}>\r\n            <S.DayTime\r\n              onClick={() => {\r\n                navigate(`/timedata/${value.id}`);\r\n              }}\r\n            >\r\n              날짜: {value.createdAt.slice(0, 10)}\r\n            </S.DayTime>\r\n          </S.DayContainer>\r\n        );\r\n      })}\r\n    </S.TotalContainer>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Intro\\index.jsx",["284"],[],"import React from \"react\";\r\nimport logo from \"src/assets/book3.jpg\";\r\nimport { useScrollFadeIn } from \"src/hooks/useScrollFadeIn\";\r\nimport * as S from \"./styled\";\r\n\r\nexport const Intro = () => {\r\n  const animatedItem = {\r\n    0: useScrollFadeIn(\"up\", 1, 0),\r\n    1: useScrollFadeIn(\"Flash\", 1, 0.1),\r\n    2: useScrollFadeIn(\"Flash\", 1, 0.2),\r\n    3: useScrollFadeIn(\"Flash\", 1, 0.3),\r\n    4: useScrollFadeIn(\"Flash\", 1, 0.4),\r\n    5: useScrollFadeIn(\"Flash\", 1, 0.5),\r\n  };\r\n\r\n  return (\r\n    <S.Background>\r\n      <S.MainContainer>\r\n        <S.MainFontContainer>\r\n          <S.MainFont>SkyPlanner</S.MainFont>\r\n          <S.description {...animatedItem[0]}>\r\n            <S.text1>스카이 플래너는 SKY대학생들에게</S.text1>\r\n            <S.text1>공부하는 방법과 공부계획수립 방법을 전수받고</S.text1>\r\n            <S.text1>\r\n              학생이 스스로 공부하며 자신에게 맞는 공부법을 찾아줍니다.\r\n            </S.text1>\r\n            <S.text1>자기주도학습 맞춤 서비스 - skyplanner</S.text1>\r\n          </S.description>\r\n          <S.Box>\r\n            <S.leftBox {...animatedItem[1]}>\r\n              <S.leftBoxContainer>\r\n                <S.leftBoxTitle>SKY대학생 선생님</S.leftBoxTitle>\r\n                <S.leftBoxText>\r\n                  각 선생님들의 대학교 갈 수 있었던 팁들을 전수받고\r\n                  <br /> 공부하는 방법과 일상생활에 공부 습관을 잡아줍니다.\r\n                </S.leftBoxText>\r\n              </S.leftBoxContainer>\r\n            </S.leftBox>\r\n            <S.rightPosition>\r\n              <S.rightBox {...animatedItem[2]}>\r\n                <S.rightBoxContainer>\r\n                  <S.rightBoxTitle>공부법 코칭</S.rightBoxTitle>\r\n                  <S.rightBoxText>\r\n                    학생 스스로에게 맞는 학생 맞춤형 공부코칭 서비스.\r\n                    <br />\r\n                    일방적으로 공부를 알려주는 것이 아닌\r\n                    <br />\r\n                    학생이 질문하고 선생님이 대답해줍니다.\r\n                  </S.rightBoxText>\r\n                </S.rightBoxContainer>\r\n              </S.rightBox>\r\n            </S.rightPosition>\r\n            <S.leftBox {...animatedItem[3]}>\r\n              <S.leftBoxContainer>\r\n                <S.leftBoxTitle>학생 중심</S.leftBoxTitle>\r\n                <S.leftBoxText>\r\n                  항상 모든 공부에는 자기 중심적인 학습이 중요합니다.\r\n                  <br />\r\n                  이를 자기주도 학습이라고 합니다. 학생 스스로가 <br />\r\n                  공부를 하며 습득하여 계획수립을 <br />\r\n                  혼자서 할 수 있게됩니다.\r\n                </S.leftBoxText>\r\n              </S.leftBoxContainer>\r\n            </S.leftBox>\r\n            <S.rightPosition>\r\n              <S.rightBox {...animatedItem[4]}>\r\n                <S.rightBoxContainer>\r\n                  <S.rightBoxTitle>자신에게 맞는 선생님</S.rightBoxTitle>\r\n                  <S.rightBoxText>\r\n                    자신이 전공하고 있는 분야의 선생님 또는자신과\r\n                    <br />\r\n                    성향이 맞는 선생님을 택하여 공감대를 형성해,\r\n                    <br />\r\n                    공부에 흥미와 좀 더 빠른 지식전달을 합니다.\r\n                    <br />\r\n                  </S.rightBoxText>\r\n                </S.rightBoxContainer>\r\n              </S.rightBox>\r\n            </S.rightPosition>\r\n            <S.leftBox {...animatedItem[5]}>\r\n              <S.leftBoxContainer>\r\n                <S.leftBoxTitle>성적 by 반복</S.leftBoxTitle>\r\n                <S.leftBoxText>\r\n                  습득한 공부방법과 계획수립 방법을 반복하면\r\n                  <br />\r\n                  자신만의 공부법과 생활패턴으로 더 나은 성적을\r\n                  <br />\r\n                  노려볼 수 있습니다.\r\n                  <br />\r\n                </S.leftBoxText>\r\n              </S.leftBoxContainer>\r\n            </S.leftBox>\r\n          </S.Box>\r\n        </S.MainFontContainer>\r\n      </S.MainContainer>\r\n    </S.Background>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeInput\\index.jsx",["285","286"],[],"import React, { useContext, useEffect } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const TimeInput = () => {\r\n  const { authState } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    kor: \"\",\r\n    eng: \"\",\r\n    math: \"\",\r\n    sci: \"\",\r\n    com: \"\",\r\n    kh: \"\",\r\n    study: \"\",\r\n  };\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/auth/login\");\r\n      alert(\"로그인해야 이용 가능한 서비스입니다.\");\r\n    }\r\n  }, []);\r\n  const validationSchema = Yup.object().shape({\r\n    kor: Yup.string().required(\"국어\"),\r\n    eng: Yup.string().required(\"영어\"),\r\n    math: Yup.string().required(\"수학\"),\r\n    sci: Yup.string().required(\"과학\"),\r\n    com: Yup.string().required(\"사회\"),\r\n    kh: Yup.string().required(\"한국사\"),\r\n    study: Yup.string().required(\"일반공부\"),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"http://localhost:8080/todaytimes\", data, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then((response) => {\r\n        navigate(\"/\");\r\n        alert(\"오늘도 수고했어요!😀\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <S.InputTimeContainer>\r\n        <S.InputContainer>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            <Form style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <label>국어</label>\r\n              <Field autoComplete=\"off\" name=\"kor\" />\r\n              <label>영어</label>\r\n              <Field autoComplete=\"off\" name=\"eng\" />\r\n              <label>수학</label>\r\n              <Field autoComplete=\"off\" name=\"math\" />\r\n              <label>과학</label>\r\n              <Field autoComplete=\"off\" name=\"sci\" />\r\n              <label>사회</label>\r\n              <Field autoComplete=\"off\" name=\"com\" />\r\n              <label>한국사</label>\r\n              <Field autoComplete=\"off\" name=\"kh\" />\r\n              <label>일반공부</label>\r\n              <Field autoComplete=\"off\" name=\"study\" />\r\n              <button type=\"submit\">제출</button>\r\n            </Form>\r\n          </Formik>\r\n        </S.InputContainer>\r\n      </S.InputTimeContainer>\r\n    </>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeData\\index.jsx",["287","288","289"],[],"import React, { useEffect, useState, useContext, useMemo } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport { Horizontal, HorizontalContainer } from \"../MyTime/styled\";\r\nimport * as S from \"./styled\";\r\n\r\nexport const TimeData = () => {\r\n  let { id } = useParams();\r\n  const [timeData, setTimeData] = useState({});\r\n\r\n  const subData = useMemo(\r\n    () => [\r\n      {\r\n        id: 1,\r\n        sub: \"국어\",\r\n        time: timeData.kor,\r\n      },\r\n      {\r\n        id: 2,\r\n        sub: \"영어\",\r\n        time: timeData.eng,\r\n      },\r\n      {\r\n        id: 3,\r\n        sub: \"수학\",\r\n        time: timeData.math,\r\n      },\r\n      {\r\n        id: 4,\r\n        sub: \"과학\",\r\n        time: timeData.sci,\r\n      },\r\n      {\r\n        id: 5,\r\n        sub: \"사회\",\r\n        time: timeData.com,\r\n      },\r\n      {\r\n        id: 6,\r\n        sub: \"한국사\",\r\n        time: timeData.kh,\r\n      },\r\n      {\r\n        id: 7,\r\n        sub: \"공부\",\r\n        time: timeData.study,\r\n      },\r\n    ],\r\n    [timeData]\r\n  );\r\n\r\n  const time = useMemo(\r\n    () => ({\r\n      labels: subData.map((val) => val.sub),\r\n      datasets: [\r\n        {\r\n          label: \"시간데이터\",\r\n          data: subData.map((val) => val.time),\r\n          plugins: {\r\n            deferred: {\r\n              xOffset: 150,\r\n              yOffset: \"50%\",\r\n              delay: 500,\r\n            },\r\n          },\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n            \"rgba(255, 205, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(84, 221, 154, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgb(255, 99, 132)\",\r\n            \"rgb(255, 159, 64)\",\r\n            \"rgb(255, 205, 86)\",\r\n            \"rgb(75, 192, 192)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(153, 102, 255)\",\r\n            \"rgb(84, 221, 154)\",\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    }),\r\n    [subData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/todaytimes/byId/${id}`)\r\n      .then((res) => setTimeData(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <S.TimeDataContainer>\r\n      <S.TimeTextContainer>\r\n        <S.TimeText>🗓 {timeData.createdAt}</S.TimeText>\r\n      </S.TimeTextContainer>\r\n      <HorizontalContainer>\r\n        <Horizontal />\r\n      </HorizontalContainer>\r\n      <S.TImeDataBoxContainer>\r\n        <S.TimeDataBox>\r\n          <S.TimeDataText>국어: {timeData.kor}시간</S.TimeDataText>\r\n          <S.TimeDataText>영어: {timeData.eng}시간</S.TimeDataText>\r\n          <S.TimeDataText>수학: {timeData.math}시간</S.TimeDataText>\r\n          <S.TimeDataText>과학: {timeData.sci}시간</S.TimeDataText>\r\n          <S.TimeDataText>사회: {timeData.com}시간</S.TimeDataText>\r\n          <S.TimeDataText>한국사: {timeData.kh}시간</S.TimeDataText>\r\n          <S.TimeDataText>일반공부: {timeData.study}시간</S.TimeDataText>\r\n          <Bar data={time} />\r\n        </S.TimeDataBox>\r\n      </S.TImeDataBoxContainer>\r\n    </S.TimeDataContainer>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyPlanSideBar\\index.jsx",["290","291","292"],[],"import axios from \"axios\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\nimport * as S from \"./styled\";\r\n\r\nexport const MyPlanSideBar = () => {\r\n  const [authState, setAuthState] = useState({\r\n    user_name: \"\",\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/auth/auth\", {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setAuthState({ ...authState, status: false });\r\n        } else {\r\n          setAuthState({\r\n            user_name: response.data.user_name,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  return (\r\n    <S.MyTimeDataContainer>\r\n      <S.MyPlanText>{authState.user_name} 님</S.MyPlanText>\r\n      <S.SelectMy>\r\n        <S.SelectMyList>\r\n          <S.SelectMyListText to=\"\">오늘의 공부</S.SelectMyListText>\r\n        </S.SelectMyList>\r\n        <S.SelectMyList>\r\n          <S.SelectMyListText to=\"habit\">습관 관리</S.SelectMyListText>\r\n        </S.SelectMyList>\r\n        <S.SelectMyList>\r\n          <S.SelectMyListText to=\"mygoal\">나의 목표</S.SelectMyListText>\r\n        </S.SelectMyList>\r\n      </S.SelectMy>\r\n    </S.MyTimeDataContainer>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyTime\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\ReviewSlide\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Footer\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TitleText\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Habit\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\helper\\AuthContext.js",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Navbar\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Intro\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Profile\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeInput\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\hooks\\useScrollFadeIn.js",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\TimeData\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\MyPlanSideBar\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\index.tsx",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\index.tsx",["293","294"],[],"import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button } from \"src/components/common\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport * as S from \"./styled\";\r\n\r\nexport interface RegisterFormInputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\nexport const RegisterForm = React.forwardRef<\r\n  HTMLInputElement,\r\n  RegisterFormInputProps\r\n>(({ autoComplete, placeholder, type, name }, ref) => {\r\n  const initialValues = {\r\n    user_name: \"\",\r\n    user_id: \"\",\r\n    user_pw: \"\",\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    user_name: Yup.string().required(),\r\n    user_id: Yup.string().required(),\r\n    user_pw: Yup.string().required(),\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    axios.post(\"http://localhost:8080/auth\", data).then(() => {\r\n      console.log(data);\r\n      navigate(\"/auth/login\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인되어 있습니다.\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <S.FormInputContainer ref={ref}>\r\n      <S.InputElementContainer>\r\n        <S.InputContainer>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            <Form>\r\n              <S.Label>이름</S.Label>\r\n              <S.InputElement\r\n                autoComplete=\"off\"\r\n                name=\"user_name\"\r\n                placeholder=\"이름\"\r\n              />\r\n              <S.Label>아이디</S.Label>\r\n              <S.InputElement\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                name=\"user_id\"\r\n                placeholder=\"id\"\r\n              />\r\n              <S.Label>비밀번호</S.Label>\r\n              <S.InputElement\r\n                autoComplete=\"off\"\r\n                name=\"user_pw\"\r\n                placeholder=\"pw\"\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button type=\"submit\">회원가입</Button>\r\n            </Form>\r\n          </Formik>\r\n        </S.InputContainer>\r\n      </S.InputElementContainer>\r\n    </S.FormInputContainer>\r\n  );\r\n});\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\index.jsx",["295"],[],"import axios from \"axios\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\nimport { Button } from \"src/components/common\";\r\nimport * as S from \"./styled\";\r\n\r\nexport const TeacherForm = () => {\r\n  const [t_id, setTid] = useState(\"\");\r\n  const [t_pw, setTpw] = useState(\"\");\r\n  const [t_job, setTjob] = useState(\"\");\r\n  const { setAuthState } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const login = () => {\r\n    const data = { t_id: t_id, t_pw: t_pw, t_job: t_job };\r\n    axios.post(\"http://localhost:8080/teacher/login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        navigate(\"/\");\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n        setAuthState({\r\n          t_id: response.data.t_id,\r\n          t_job: response.data.t_job,\r\n          id: response.data.id,\r\n          status: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인되었습니다.\");\r\n    }\r\n  }, []);\r\n  const enableButton = t_job === \"teacher\" ? false : true;\r\n  return (\r\n    <>\r\n      <S.FormInputContainer>\r\n        <S.TitleContainer>\r\n          <S.Title>선생님 로그인</S.Title>\r\n        </S.TitleContainer>\r\n        <S.InputElementContainer>\r\n          <S.InputContainer>\r\n            <S.empty />\r\n            <S.InputElement\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setTid(event.target.value);\r\n              }}\r\n              placeholder=\"아이디\"\r\n            />\r\n            <S.InputElement\r\n              type=\"password\"\r\n              onChange={(event) => {\r\n                setTpw(event.target.value);\r\n              }}\r\n              placeholder=\"비밀번호\"\r\n            />\r\n            <S.LabelContainer>\r\n              <S.Label>아래에</S.Label>\r\n              <S.teacher>‘teacher’</S.teacher>\r\n              <S.Label>을 입력해주세요.</S.Label>\r\n            </S.LabelContainer>\r\n            <S.InputElement\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setTjob(event.target.value);\r\n              }}\r\n            />\r\n          </S.InputContainer>\r\n          <S.ButtonContainer>\r\n            <Button\r\n              disabled={enableButton}\r\n              style={{\r\n                backgroundColor: enableButton === true ? \"#afafaf\" : \"black\",\r\n              }}\r\n              onClick={login}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </S.ButtonContainer>\r\n        </S.InputElementContainer>\r\n      </S.FormInputContainer>\r\n    </>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\index.jsx",["296"],[],"import axios from \"axios\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"src/helper/AuthContext\";\r\nimport { Button } from \"src/components/common\";\r\nimport * as S from \"./styled\";\r\n\r\nexport const FormInput = () => {\r\n  const [user_id, setUserid] = useState(\"\");\r\n  const [user_pw, setUserpw] = useState(\"\");\r\n  const { setAuthState } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const login = () => {\r\n    const data = { user_id: user_id, user_pw: user_pw };\r\n    axios.post(\"http://localhost:8080/auth/login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        navigate(\"/\");\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n        setAuthState({\r\n          user_id: response.data.user_id,\r\n          id: response.data.id,\r\n          status: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/\");\r\n      alert(\"로그인되었습니다.\");\r\n    }\r\n  }, []);\r\n  const enableButton = user_pw === \"\" ? true : false;\r\n  return (\r\n    <>\r\n      <S.FormInputContainer>\r\n        <S.InputElementContainer>\r\n          <S.InputContainer>\r\n            <S.InputElement\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setUserid(event.target.value);\r\n              }}\r\n              placeholder=\"아이디\"\r\n            />\r\n            <S.InputElement\r\n              type=\"password\"\r\n              onChange={(event) => {\r\n                setUserpw(event.target.value);\r\n              }}\r\n              placeholder=\"비밀번호\"\r\n              value={user_pw}\r\n            />\r\n            <Button\r\n              disabled={enableButton}\r\n              style={{\r\n                backgroundColor: enableButton === true ? \"#afafaf\" : \"black\",\r\n              }}\r\n              onClick={login}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <S.ChooseMenu>\r\n              <S.Choose to=\"/auth/teacher\">\r\n                <S.goTeacher>선생님</S.goTeacher>로그인\r\n              </S.Choose>\r\n              <S.verticalChoose>|</S.verticalChoose>\r\n              <S.Choose to=\"#\">비밀번호 변경</S.Choose>\r\n            </S.ChooseMenu>\r\n          </S.InputContainer>\r\n        </S.InputElementContainer>\r\n      </S.FormInputContainer>\r\n    </>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\GraphList\\BarGraph\\index.jsx",["297"],[],"import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\n\r\nexport const BarGraph = ({ chartData }) => {\r\n  return <Bar data={chartData} />;\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Students\\StList\\index.jsx",["298","299","300"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Horizontal,\r\n  HorizontalContainer,\r\n} from \"src/components/common/MyTime/styled\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport const StList = () => {\r\n  const [listOfUsers, setListOfUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [teaState, setTeaState] = useState({\r\n    t_job: \"\",\r\n    status: false,\r\n  });\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      navigate(\"/auth/login\");\r\n      alert(\"선생님 전용 아이디 코드로 로그인 해야 이용가능합니다.\");\r\n    } else {\r\n      axios\r\n        .get(\"http://localhost:8080/auth\", {\r\n          //일반 유저의 데이터를 가져오는 게 아닌 시간데이터를 올린 유저만 이름을 가지고 온다.\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          setListOfUsers(response.data.listOfUsers);\r\n        });\r\n      axios\r\n        .get(\"http://localhost:8080/auth/auth\", {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.error) {\r\n            setTeaState({ ...teaState, status: false });\r\n          } else {\r\n            setTeaState({\r\n              t_job: response.data.t_job,\r\n              status: true,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n  return (\r\n    <S.Container>\r\n      {teaState.t_job === \"teacher\" ? (\r\n        <>\r\n          <S.SearchContainer>\r\n            <S.Search>\r\n              <S.SearchInput\r\n                type=\"text\"\r\n                placeholder=\"학생 검색\"\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n              />\r\n            </S.Search>\r\n          </S.SearchContainer>\r\n          <HorizontalContainer>\r\n            <Horizontal />\r\n          </HorizontalContainer>\r\n          <S.ListContainer>\r\n            {listOfUsers\r\n              .filter((value) => {\r\n                if (searchTerm == \"\") {\r\n                  return value;\r\n                } else if (\r\n                  value.user_id.toLowerCase().includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return value;\r\n                }\r\n              })\r\n              .map((value, key) => {\r\n                return (\r\n                  <S.List key={key}>\r\n                    <S.StName to={`/profile/${value.id}`}>\r\n                      <S.StText>{value.user_name}</S.StText>\r\n                    </S.StName>\r\n                  </S.List>\r\n                );\r\n              })}\r\n          </S.ListContainer>\r\n        </>\r\n      ) : (\r\n        <S.Alert>*학생계정으로 로그인되어있습니다.*</S.Alert>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n","D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\AuthFormTemplate\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\RegisterForm\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\TeacherForm\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Auth\\FormInput\\styled.ts",[],[],"D:\\gitcloneSP\\SP_frontend\\src\\components\\common\\Students\\StList\\styled.ts",[],[],{"ruleId":"301","severity":1,"message":"302","line":43,"column":6,"nodeType":"303","endLine":43,"endColumn":8,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":1,"column":38,"nodeType":"307","messageId":"308","endLine":1,"endColumn":48},{"ruleId":"305","severity":1,"message":"309","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":21},{"ruleId":"301","severity":1,"message":"310","line":22,"column":6,"nodeType":"303","endLine":22,"endColumn":8,"suggestions":"311"},{"ruleId":"305","severity":1,"message":"312","line":2,"column":8,"nodeType":"307","messageId":"308","endLine":2,"endColumn":12},{"ruleId":"305","severity":1,"message":"313","line":11,"column":11,"nodeType":"307","messageId":"308","endLine":11,"endColumn":20},{"ruleId":"301","severity":1,"message":"314","line":27,"column":6,"nodeType":"303","endLine":27,"endColumn":8,"suggestions":"315"},{"ruleId":"305","severity":1,"message":"306","line":1,"column":38,"nodeType":"307","messageId":"308","endLine":1,"endColumn":48},{"ruleId":"305","severity":1,"message":"316","line":2,"column":21,"nodeType":"307","messageId":"308","endLine":2,"endColumn":32},{"ruleId":"301","severity":1,"message":"317","line":97,"column":6,"nodeType":"303","endLine":97,"endColumn":8,"suggestions":"318"},{"ruleId":"305","severity":1,"message":"306","line":2,"column":27,"nodeType":"307","messageId":"308","endLine":2,"endColumn":37},{"ruleId":"305","severity":1,"message":"309","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":21},{"ruleId":"301","severity":1,"message":"319","line":29,"column":6,"nodeType":"303","endLine":29,"endColumn":8,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":3,"column":24,"nodeType":"307","messageId":"308","endLine":3,"endColumn":29},{"ruleId":"301","severity":1,"message":"314","line":41,"column":6,"nodeType":"303","endLine":41,"endColumn":8,"suggestions":"323"},{"ruleId":"301","severity":1,"message":"314","line":38,"column":6,"nodeType":"303","endLine":38,"endColumn":8,"suggestions":"324"},{"ruleId":"301","severity":1,"message":"314","line":36,"column":6,"nodeType":"303","endLine":36,"endColumn":8,"suggestions":"325"},{"ruleId":"305","severity":1,"message":"326","line":3,"column":19,"nodeType":"307","messageId":"308","endLine":3,"endColumn":26},{"ruleId":"301","severity":1,"message":"327","line":47,"column":6,"nodeType":"303","endLine":47,"endColumn":8,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":68,"column":31,"nodeType":"331","messageId":"332","endLine":68,"endColumn":33},{"ruleId":"333","severity":1,"message":"334","line":69,"column":32,"nodeType":"335","messageId":"336","endLine":69,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authState' and 'teaState'. Either include them or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["337"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["338"],"'logo' is defined but never used.","'authState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["339"],"'useNavigate' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["341"],"@typescript-eslint/no-unused-vars","'Field' is defined but never used.",["342"],["343"],["344"],"'ChartJS' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'teaState'. Either include them or remove the dependency array. You can also do a functional update 'setTeaState(t => ...)' if you only need 'teaState' in the 'setTeaState' call.",["345"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"350","fix":"356"},{"desc":"350","fix":"357"},{"desc":"350","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: [authState, teaState]",{"range":"361","text":"362"},"Update the dependencies array to be: [id, navigate]",{"range":"363","text":"364"},"Update the dependencies array to be: [navigate]",{"range":"365","text":"366"},"Update the dependencies array to be: [id]",{"range":"367","text":"368"},"Update the dependencies array to be: [authState]",{"range":"369","text":"370"},{"range":"371","text":"366"},{"range":"372","text":"366"},{"range":"373","text":"366"},"Update the dependencies array to be: [navigate, teaState]",{"range":"374","text":"375"},[1114,1116],"[authState, teaState]",[697,699],"[id, navigate]",[703,705],"[navigate]",[2266,2268],"[id]",[786,788],"[authState]",[1143,1145],[1201,1203],[1131,1133],[1444,1446],"[navigate, teaState]"]